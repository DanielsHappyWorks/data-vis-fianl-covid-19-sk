{"version":3,"sources":["_header/Header.js","charts/MapChart.js","charts/MultiChart.js","charts/MultiDateChart.js","_data/DataProcessor.js","_content/widget/InfoCard/InfoCard.js","_content/widget/InfoCardRow/InfoCardRow.js","_content/dashboard/Dashboard.js","_data/DataLoader.js","_content/loader/Loader.js","_content/Content.js","_footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["SuperCoolComponent","M","AutoInit","className","Component","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapChart","props","state","map","getAllSettings","color","1","2","3","4","elems","document","querySelectorAll","newSate","FormSelect","init","getSelectedValues","this","setState","onChange","handleClick","bind","value","defaultValue","center","zoom","zoomControl","style","width","height","TileLayer","attribution","url","detectRetina","maxZoom","maxNativeZoom","chartData","data","CircleMarker","latLong","key","country","opacity","radius","Popup","replace","totalCases","totalDeaths","recentCases","recentDeaths","MultiChart","chart","getElementById","id","limit","labels","datasets","label","backgroundColor","Array","from","keys","x","values","list","j","length","push","sort","a","b","k","slice","getDataAsChartData","options","title","display","displayTitle","text","legend","position","legendPosition","displayLegend","cutoutPercentage","getChart","defaultProps","borderWidth","scales","xAxes","yAxes","type","titleDD","Data","undefined","setData","newData","countries","Number","getTotal","toLocaleString","getLatest","getMortality","getWorldMapData","getCountersPerValue","getCountersPerValueLatest","getCumulative","sortByData","console","log","getData","updateDashboardState","newState","global","continent","cases","itemToGroupBy","itemToCount","counter","Map","forEach","element","listItem","includes","countriesAndTerritories","get","set","parseInt","valMap","kvAsObj","i","aAsDataVals","split","bAsDataVals","Date","cumulativeValue","mostRecentDate","year","month","day","getTime","deaths","deathsCases","worldData","totalCasesTracker","totalDeathsTracker","recentCasesTracker","recentDeathsTracker","transformedElem","latitude","longitude","totalCasesMinMax","normalizeBetweenTwoRanges","Math","min","apply","max","totalDeathsMinMax","recentCasesMinMax","recentDeathsMinMax","val","minVal","maxVal","newMin","newMax","mostRecentCase","InfoCard","columns","heading","InfoCardRow","Object","cards","Dashboard","name","URL","location","searchParams","createState","countriesForAutoComplete","fromEntries","dataMap","newCtryArr","join","tag","DataProcessor","elem","querySelector","Collapsible","accordion","Chips","chips","autocompleteOptions","placeholder","secondaryPlaceholder","onChipAdd","event","currentChips","M_Chips","chipsData","obj","onChipDelete","addEventListener","onAutocomplete","wat","col","two","three","one","worldMapData","MultiDateChart","cumulative","daily","initialiseData","shouldGetDataFromFile","getDataFromFile","fetch","then","response","json","getDataMap","catch","err","countryMap","exclusionList","records","continentCode","continentName","geo_location","geoId","Three_Letter_Country_Code","countryterritoryCode","Two_Letter_Country_Code","Continent_Name","continentExp","Continent_Code","LoaderExampleText","Content","isLoggedIn","renderItem","Loader","Footer","href","React","App","Header","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8902a680.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './header.scss';\r\n\r\n// Import Materialize\r\nimport M from \"materialize-css\";\r\n\r\n\r\nclass SuperCoolComponent extends Component {\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <div className=\"nav-wrapper\">\r\n            <div className=\"brand-logo center\">COVID-19</div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SuperCoolComponent;","import React, { Component } from 'react';\r\nimport { Map, TileLayer, CircleMarker, Popup } from \"react-leaflet\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport M from \"materialize-css\";\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nclass MapChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      map: this.getAllSettings()[1].map,\r\n      color: this.getAllSettings()[1].color,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    M.AutoInit();\r\n  }\r\n\r\n  getAllSettings() {\r\n    return {\r\n      1: {\r\n        map: \"totalCases\",\r\n        color: \"#2BB11A\",\r\n      },\r\n      2: {\r\n        map: \"totalDeaths\",\r\n        color: \"#CDAF1C\",\r\n      },\r\n      3: {\r\n        map: \"recentCases\",\r\n        color: \"#1C8ECD\",\r\n      },\r\n      4: {\r\n        map: \"recentDeaths\",\r\n        color: \"#C70039\",\r\n      }\r\n    };\r\n  }\r\n\r\n  handleClick() {\r\n    var elems = document.querySelectorAll('select');\r\n    var instances = M.FormSelect.init(elems);\r\n    var newSate = instances[0].getSelectedValues()[0];\r\n    this.setState({\r\n      map: this.getAllSettings()[newSate].map,\r\n      color: this.getAllSettings()[newSate].color\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"input-field col s12\">\r\n          <select onChange={this.handleClick.bind(this)}>\r\n            <option value=\"1\" defaultValue>Total Cases</option>\r\n            <option value=\"3\">Recent Cases</option>\r\n            <option value=\"2\">Total Deaths</option>\r\n            <option value=\"4\">Recent Deaths</option>\r\n          </select>\r\n          <label>Select Map</label>\r\n        </div>\r\n        <Map\r\n          center={[0, 0]}\r\n          zoom=\"2\"\r\n          zoomControl=\"false\"\r\n          style={{ width: '100%', height: '500px' }}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            detectRetina=\"true\"\r\n            maxZoom=\"10\"\r\n            maxNativeZoom=\"10\"\r\n          />\r\n\r\n          {this.props.chartData.map(data => {\r\n            if (data[this.state.map] !== 0) {\r\n              return (\r\n                <CircleMarker\r\n                  center={data.latLong}\r\n                  key={data.country + \"_cases\"}\r\n                  opacity={0.7}\r\n                  radius={data[this.state.map + \"MinMax\"]}\r\n                  color={this.state.color}\r\n                >\r\n                  <Popup>Location: {data.country.replace(/_/g, \" \")}<br></br>\r\n                Total Cases: {data.totalCases}<br></br>\r\n                Total Deaths: {data.totalDeaths}<br></br>\r\n                Recent Cases: {data.recentCases}<br></br>\r\n                Recent Deaths: {data.recentDeaths}\r\n                  </Popup>\r\n                </CircleMarker>\r\n              )\r\n            }\r\n            else {\r\n              return '';\r\n            } \r\n          }\r\n          )}\r\n        </Map>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapChart;","import React, { Component } from 'react';\r\nimport { Pie, Bar, Line, Polar, Doughnut } from 'react-chartjs-2';\r\nimport M from \"materialize-css\";\r\n\r\n\r\nclass MultiChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chart: \"1\"\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    displayTitle: true,\r\n    displayLegend: true,\r\n    legendPosition: 'right',\r\n    title: 'Unset Title'\r\n  }\r\n\r\n  componentDidMount() {\r\n    M.AutoInit();\r\n  }\r\n\r\n  handleClick() {\r\n    var elems = document.getElementById(this.props.id + 'select');\r\n    var instances = M.FormSelect.init(elems);\r\n    var newSate = instances.getSelectedValues()[0];\r\n    this.setState({\r\n      chart: newSate,\r\n    });\r\n  }\r\n\r\n  getDataAsChartData(data, limit) {\r\n    var chartData = {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"Value\",\r\n          data: [],\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.6)',\r\n            'rgba(54, 162, 235, 0.6)',\r\n            'rgba(255, 206, 86, 0.6)',\r\n            'rgba(75, 192, 192, 0.6)',\r\n            'rgba(153, 102, 255, 0.6)',\r\n            'rgba(255, 159, 64, 0.6)',\r\n            'rgba(255, 99, 90, 0.6)',\r\n            'rgba(100, 162, 235, 0.6)',\r\n            'rgba(255, 150, 86, 0.6)'\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n    chartData.labels = Array.from(data.keys()).map(function (x) { return x.replace(/_/g, ' '); });\r\n    chartData.datasets[0].data = Array.from(data.values());\r\n\r\n\r\n    var list = [];\r\n    for (var j = 0; j < chartData.labels.length; j++)\r\n      list.push({ 'key': chartData.labels[j], 'value': chartData.datasets[0].data[j] });\r\n\r\n    list.sort(function (a, b) {\r\n      return b.value - a.value;\r\n    });\r\n\r\n    for (var k = 0; k < list.length; k++) {\r\n      chartData.labels[k] = list[k].key;\r\n      chartData.datasets[0].data[k] = list[k].value;\r\n    }\r\n\r\n    if (limit) {\r\n      chartData.labels = chartData.labels.slice(0, limit);\r\n      chartData.datasets[0].data = chartData.datasets[0].data.slice(0, limit);\r\n    }\r\n\r\n    return chartData;\r\n  }\r\n\r\n  getChart(chart) {\r\n    if (chart === \"1\") {\r\n      return <Bar\r\n        data={this.getDataAsChartData(this.props.chartData, this.props.limit)}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Bar Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"2\") {\r\n      return <Pie\r\n        data={this.getDataAsChartData(this.props.chartData, this.props.limit)}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Pie Chart\",\r\n          },\r\n          legend: {\r\n            display: this.props.displayLegend,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"3\") {\r\n      return <Doughnut\r\n        data={this.getDataAsChartData(this.props.chartData, this.props.limit)}\r\n        options={{\r\n          cutoutPercentage: 50,\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Doughnut Chart\",\r\n          },\r\n          legend: {\r\n            display: this.props.displayLegend,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"4\") {\r\n      return <Polar\r\n        data={this.getDataAsChartData(this.props.chartData, this.props.limit)}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Polar Chart\",\r\n          },\r\n          legend: {\r\n            display: this.props.displayLegend,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"5\") {\r\n      return <Line\r\n        data={this.getDataAsChartData(this.props.chartData, this.props.limit)}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Line Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var chart = this.getChart(this.state.chart);\r\n    return (\r\n      <div>\r\n        <div className=\"input-field col s12\">\r\n          <select id={this.props.id + 'select'} onChange={this.handleClick.bind(this)}>\r\n            <option value=\"1\" defaultValue>{this.props.title}- Bar Chart</option>\r\n            <option value=\"2\">{this.props.title} - Pie Chart</option>\r\n            <option value=\"3\">{this.props.title} - Doughnut Chart</option>\r\n            <option value=\"4\">{this.props.title} - Polar Chart</option>\r\n            <option value=\"5\">{this.props.title} - Line Chart</option>\r\n          </select>\r\n          <label>Select Chart</label>\r\n        </div>\r\n        {chart}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MultiChart;","import React, { Component } from 'react';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nimport M from \"materialize-css\";\r\n\r\n\r\nclass MultiChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chart: \"1\"\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    displayTitle: true,\r\n    displayLegend: true,\r\n    legendPosition: 'right',\r\n    title: 'Unset Title'\r\n  }\r\n\r\n  componentDidMount() {\r\n    M.AutoInit();\r\n  }\r\n\r\n  handleClick() {\r\n    var elems = document.getElementById(this.props.id + 'select');\r\n    var instances = M.FormSelect.init(elems);\r\n    var newSate = instances.getSelectedValues()[0];\r\n    this.setState({\r\n      chart: newSate,\r\n    });\r\n  }\r\n\r\n  getDataAsChartData(data) {\r\n    var chartData = {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          backgroundColor: this.props.color,\r\n          borderWidth: 1,\r\n          label: \"Value\",\r\n          data: [],\r\n        }\r\n      ]\r\n    }\r\n    chartData.labels = data.keys;\r\n    chartData.datasets[0].data = data.values;\r\n\r\n    return chartData;\r\n  }\r\n\r\n  getChart(chart) {\r\n    if (chart === \"1\") {\r\n      return <Bar\r\n        data={this.getDataAsChartData(this.props.chartData)}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \" - Bar Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"2\") {\r\n      return <Line\r\n        data={this.getDataAsChartData(this.props.chartData)}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \" - Line Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"3\") {\r\n      return <Bar\r\n        data={this.getDataAsChartData(this.props.chartData)}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \" - Line Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          },\r\n          scales: {\r\n            xAxes: [{\r\n              display: true,\r\n            }],\r\n            yAxes: [{\r\n              display: true,\r\n              type: 'logarithmic',\r\n            }]\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"4\") {\r\n      return <Line\r\n        data={this.getDataAsChartData(this.props.chartData)}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \" - Line Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          },\r\n          scales: {\r\n            xAxes: [{\r\n              display: true,\r\n            }],\r\n            yAxes: [{\r\n              display: true,\r\n              type: 'logarithmic',\r\n            }]\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var chart = this.getChart(this.state.chart);\r\n    return (\r\n      <div>\r\n        <div className=\"input-field col s12\">\r\n          <select id={this.props.id + 'select'} onChange={this.handleClick.bind(this)}>\r\n            <option value=\"1\" defaultValue>{this.props.titleDD} - Bar Chart</option>\r\n            <option value=\"2\">{this.props.titleDD} - Line Chart</option>\r\n            <option value=\"3\">{this.props.titleDD} - Logrithmic Bar Chart</option>\r\n            <option value=\"4\">{this.props.titleDD} - Logrithmic Line Chart</option>\r\n          </select>\r\n          <label>Select Chart</label>\r\n        </div>\r\n        {chart}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MultiChart;","const Data = {\r\n  data: undefined,\r\n\r\n  setData: function (newData, countries) {\r\n    this.data = {\r\n      \"map\": newData,\r\n      \"global\": {\r\n        \"totalCases\": {\r\n          \"Total Cases\": Number(this.getTotal(newData, 'cases')).toLocaleString(),\r\n          \"Recent Cases\": Number(this.getLatest(newData, 'cases')).toLocaleString()\r\n        },\r\n        \"totalDeaths\": {\r\n          \"Total Deaths\": Number(this.getTotal(newData, 'deaths')).toLocaleString(),\r\n          \"Recent Deaths\": Number(this.getLatest(newData, 'deaths')).toLocaleString(),\r\n          \"Mortality Rate\": Number(this.getMortality(newData)).toLocaleString() + \"%\"\r\n        },\r\n        \"worldMapData\": this.getWorldMapData(newData),\r\n        \"continent\": {\r\n          \"cases\": this.getCountersPerValue(newData, 'continentName', 'cases'),\r\n          \"deaths\": this.getCountersPerValue(newData, 'continentName', 'deaths'),\r\n          \"recentCases\": this.getCountersPerValueLatest(newData, 'continentName', 'cases'),\r\n          \"recentDeaths\": this.getCountersPerValueLatest(newData, 'continentName', 'deaths')\r\n        },\r\n        \"country\": {\r\n          \"cases\": this.getCountersPerValue(newData, 'countriesAndTerritories', 'cases'),\r\n          \"deaths\": this.getCountersPerValue(newData, 'countriesAndTerritories', 'deaths'),\r\n          \"recentCases\": this.getCountersPerValueLatest(newData, 'countriesAndTerritories', 'cases'),\r\n          \"recentDeaths\": this.getCountersPerValueLatest(newData, 'countriesAndTerritories', 'deaths')\r\n        }\r\n      },\r\n      \"country\": {\r\n        \"totalCases\": {\r\n          \"Total Cases\": Number(this.getTotal(newData, 'cases', countries)).toLocaleString(),\r\n          \"Recent Cases\": Number(this.getLatest(newData, 'cases', countries)).toLocaleString()\r\n        },\r\n        \"totalDeaths\": {\r\n          \"Total Deaths\": Number(this.getTotal(newData, 'deaths', countries)).toLocaleString(),\r\n          \"Recent Deaths\": Number(this.getLatest(newData, 'deaths', countries)).toLocaleString(),\r\n          \"Mortality Rate\": Number(this.getMortality(newData, countries)).toLocaleString() + \"%\"\r\n        },\r\n        \"cumulative\": {\r\n          \"cases\": this.getCumulative(this.sortByData(this.getCountersPerValue(newData, 'dateRep', 'cases', countries))),\r\n          \"deaths\": this.getCumulative(this.sortByData(this.getCountersPerValue(newData, 'dateRep', 'deaths', countries))),\r\n        },\r\n        \"daily\": {\r\n          \"cases\": this.sortByData(this.getCountersPerValue(newData, 'dateRep', 'cases', countries)),\r\n          \"deaths\": this.sortByData(this.getCountersPerValue(newData, 'dateRep', 'deaths', countries)),\r\n        }\r\n      }\r\n    }\r\n    console.log(this.data)\r\n  },\r\n\r\n  getData: function () {\r\n    return this.data;\r\n  },\r\n\r\n  updateDashboardState: function (newState) {\r\n    newState.chartData.labels = Array.from(this.data.global.continent.cases.keys());\r\n    newState.chartData.datasets[0].data = Array.from(this.data.global.continent.cases.values());;\r\n    return newState;\r\n  },\r\n\r\n  getCountersPerValue: function (data, itemToGroupBy, itemToCount, country) {\r\n    var counter = new Map()\r\n    data.forEach(element => {\r\n      element.forEach(listItem => {\r\n        if ((country === undefined || country.includes(listItem.countriesAndTerritories))) {\r\n          if (counter.get(listItem[itemToGroupBy]) !== undefined) {\r\n            counter.set(listItem[itemToGroupBy], counter.get(listItem[itemToGroupBy]) + parseInt(listItem[itemToCount]));\r\n          } else {\r\n            counter.set(listItem[itemToGroupBy], parseInt(listItem[itemToCount]));\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return counter;\r\n  },\r\n\r\n  sortByData: function (valMap) {\r\n    var keys = Array.from(valMap.keys());\r\n    var values = Array.from(valMap.values());\r\n\r\n    var kvAsObj = []\r\n    keys.forEach((key, i) => kvAsObj[i] = {key: key, value: values[i]});\r\n\r\n    kvAsObj.sort(function(a,b){\r\n      var aAsDataVals = a.key.split(\"/\");\r\n      var bAsDataVals = b.key.split(\"/\");\r\n      return new Date(aAsDataVals[2], aAsDataVals[1] - 1, aAsDataVals[0]) - new Date(bAsDataVals[2], bAsDataVals[1] - 1, bAsDataVals[0]);\r\n    });\r\n\r\n    return {\r\n      keys: kvAsObj.map(function(i) {\r\n        return i.key;\r\n      }),\r\n      values: kvAsObj.map(function(i) {\r\n        return i.value;\r\n      }),\r\n    };\r\n  },\r\n\r\n  getCumulative: function (valMap) {\r\n    var cumulativeValue = 0;\r\n    valMap.values.forEach((value, key) => {\r\n      cumulativeValue = cumulativeValue + value;\r\n      valMap.values[key] = cumulativeValue;\r\n    });\r\n    return {\r\n      keys: valMap.keys,\r\n      values: valMap.values,\r\n    };\r\n  },\r\n\r\n  getCountersPerValueLatest: function (data, itemToCount, value) {\r\n    var counter = new Map()\r\n    var mostRecentDate = new Date(1999, 1, 1);\r\n    data.forEach(element => {\r\n      element.forEach(listItem => {\r\n        if (mostRecentDate < new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day))) {\r\n          mostRecentDate = new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day));\r\n          counter.set(listItem[itemToCount], parseInt(listItem[value]));\r\n        } else if (mostRecentDate.getTime() === new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day)).getTime()) {\r\n          if (counter.get(listItem[itemToCount]) !== undefined) {\r\n            counter.set(listItem[itemToCount], counter.get(listItem[itemToCount]) + parseInt(listItem[value]));\r\n          } else {\r\n            counter.set(listItem[itemToCount], parseInt(listItem[value]));\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return counter;\r\n  },\r\n\r\n  getWorldMapData: function (data) {\r\n    var cases = this.getCountersPerValue(data, 'countriesAndTerritories', 'cases');\r\n    var deaths = this.getCountersPerValue(data, 'countriesAndTerritories', 'deaths');\r\n    var recentCases = this.getCountersPerValueLatest(data, 'countriesAndTerritories', 'cases');\r\n    var deathsCases = this.getCountersPerValueLatest(data, 'countriesAndTerritories', 'deaths');\r\n    var worldData = []\r\n    var totalCasesTracker = [];\r\n    var totalDeathsTracker = [];\r\n    var recentCasesTracker = [];\r\n    var recentDeathsTracker = [];\r\n    data.forEach(element => {\r\n      var transformedElem = {};\r\n      transformedElem.country = element[0].countriesAndTerritories;\r\n      transformedElem.latLong = [element[0].latitude, element[0].longitude];\r\n      transformedElem.totalCases = cases.get(element[0].countriesAndTerritories)\r\n      if(!transformedElem.totalCases)\r\n        transformedElem.totalCases = 0;\r\n      totalCasesTracker.push(transformedElem.totalCases);\r\n      transformedElem.totalDeaths = deaths.get(element[0].countriesAndTerritories);\r\n      if(!transformedElem.totalDeaths)\r\n        transformedElem.totalDeaths = 0;\r\n      totalDeathsTracker.push(transformedElem.totalDeaths);\r\n      transformedElem.recentCases = recentCases.get(element[0].countriesAndTerritories)\r\n      if(!transformedElem.recentCases)\r\n        transformedElem.recentCases = 0;\r\n      recentCasesTracker.push(transformedElem.recentCases);\r\n      transformedElem.recentDeaths = deathsCases.get(element[0].countriesAndTerritories)\r\n      if(!transformedElem.recentDeaths)\r\n        transformedElem.recentDeaths = 0;\r\n      recentDeathsTracker.push(transformedElem.recentDeaths);\r\n      worldData.push(transformedElem)\r\n    });\r\n    worldData.forEach(element => {\r\n      element.totalCasesMinMax = this.normalizeBetweenTwoRanges(element.totalCases, Math.min.apply(null, totalCasesTracker), Math.max.apply(null, totalCasesTracker), 5, 100);\r\n      element.totalDeathsMinMax = this.normalizeBetweenTwoRanges(element.totalDeaths, Math.min.apply(null, totalDeathsTracker), Math.max.apply(null, totalDeathsTracker), 5, 100);\r\n      element.recentCasesMinMax = this.normalizeBetweenTwoRanges(element.recentCases, Math.min.apply(null, recentCasesTracker), Math.max.apply(null, recentCasesTracker), 5, 100);\r\n      element.recentDeathsMinMax = this.normalizeBetweenTwoRanges(element.recentDeaths, Math.min.apply(null, recentDeathsTracker), Math.max.apply(null, recentDeathsTracker), 5, 100);\r\n    })\r\n    return worldData;\r\n  },\r\n\r\n  normalizeBetweenTwoRanges: function (val, minVal, maxVal, newMin, newMax) {\r\n    return newMin + (val - minVal) * (newMax - newMin) / (maxVal - minVal);\r\n  },\r\n\r\n  getMortality: function (data, country) {\r\n    var totalCases = this.getTotal(data, 'cases', country);\r\n    var totalDeaths = this.getTotal(data, 'deaths', country);\r\n    return totalDeaths / totalCases * 100;\r\n  },\r\n\r\n  getTotal: function (data, value, country) {\r\n    var counter = 0\r\n    data.forEach(element => {\r\n      element.forEach(listItem => {\r\n        if (country === undefined || country.includes(listItem.countriesAndTerritories)) {\r\n          counter += parseInt(listItem[value])\r\n        }\r\n      });\r\n    });\r\n    return counter;\r\n  },\r\n\r\n  getLatest: function (data, value, country) {\r\n    var counter = 0\r\n    data.forEach(element => {\r\n      var mostRecentDate = new Date(1999, 1, 1);\r\n      var mostRecentCase = 0\r\n      element.forEach(listItem => {\r\n        if ((mostRecentDate < new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day))) && (country === undefined || country.includes(listItem.countriesAndTerritories))) {\r\n          mostRecentDate = new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day));\r\n          mostRecentCase = parseInt(listItem[value]);\r\n        }\r\n      });\r\n      counter += mostRecentCase;\r\n    });\r\n    return counter;\r\n  },\r\n}\r\n\r\nexport default Data;","import React, { Component } from 'react';\r\nimport M from \"materialize-css\";\r\nimport './InfoCard.scss';\r\n\r\n\r\nclass InfoCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // Auto initialize all the things!\r\n        M.AutoInit();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.columns}>\r\n                <div className=\"card InfoCard\">\r\n                    <h5 className=\"header\">{this.props.heading}</h5>\r\n                    <p>{this.props.data}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoCard;","import React, { Component } from 'react';\r\nimport M from \"materialize-css\";\r\nimport InfoCard from '../InfoCard/InfoCard';\r\n\r\n\r\nclass InfoCardRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Auto initialize all the things!\r\n        M.AutoInit();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {Object.keys(this.props.cards).map(key => (\r\n                    <InfoCard key={key} columns={this.props.columns} heading={key} data={this.props.cards[key]} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoCardRow;","import React, { Component } from 'react';\r\nimport M from \"materialize-css\";\r\nimport MapChart from '../../charts/MapChart';\r\nimport MultiChart from '../../charts/MultiChart';\r\nimport MultiDateChart from '../../charts/MultiDateChart';\r\nimport DataProcessor from '../../_data/DataProcessor'\r\nimport InfoCardRow from '../widget/InfoCardRow/InfoCardRow'\r\n\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var params = (new URL(document.location)).searchParams;\r\n    var name = params.get(\"country\");\r\n    var countries = name && name.length > 0 ? name.split(\",\") : [\"South_Korea\"];\r\n\r\n    this.state = this.createState(countries);\r\n  }\r\n\r\n  createState(countries) {\r\n    var countriesForAutoComplete = Object.fromEntries(this.props.dataMap);\r\n    Object.keys(countriesForAutoComplete).forEach(k => countriesForAutoComplete[k] = null)\r\n\r\n    var newState = {\r\n      countries: Array.from(this.props.dataMap.keys()),\r\n      countriesForAutoComplete: countriesForAutoComplete,\r\n    }\r\n\r\n\r\n    var newCtryArr = [];\r\n    if (countries.length > 7){\r\n      newCtryArr = countries.slice(0, 7);\r\n      newCtryArr.push(\"etc\");\r\n    } else {\r\n      newCtryArr = countries\r\n    }\r\n  \r\n    newState[\"country\"] = newCtryArr.join(\", \").replace(/_/g, \" \");\r\n    newState[\"chips\"] = countries.map(function (country) {\r\n      return {\r\n        tag: country\r\n      }\r\n    });\r\n\r\n    DataProcessor.setData(this.props.dataMap, countries);\r\n    newState[\"data\"] = DataProcessor.getData();\r\n    newState[\"col\"] = {\r\n      \"two\": \"col s12 m12 l6\",\r\n      \"three\": \"col s12 m6 l4\",\r\n      \"four\": \"col s12 m6 l3\",\r\n      \"five\": \"col s12 m6 l2\"\r\n    }\r\n    return newState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n\r\n    var elem = document.querySelector('.collapsible.expandable');\r\n    M.Collapsible.init(elem, {\r\n      accordion: false\r\n    });\r\n\r\n    var elems = document.querySelectorAll('.chips');\r\n    M.Chips.init(elems, {\r\n      data: this.state.chips,\r\n      autocompleteOptions: {\r\n        data: this.state.countriesForAutoComplete,\r\n      },\r\n      placeholder: 'Previous Country Set',\r\n      secondaryPlaceholder: \"Select a Country\",\r\n      onChipAdd: function (event) {\r\n        var currentChips = event[0].M_Chips.chipsData.map(function (obj) {\r\n          return obj.tag;\r\n        });\r\n        DataProcessor.setData(this.props.dataMap, currentChips);\r\n        this.setState(this.createState(currentChips));\r\n      }.bind(this),\r\n      onChipDelete: function (event) {\r\n        var currentChips = event[0].M_Chips.chipsData.map(function (obj) {\r\n          return obj.tag;\r\n        });\r\n        if (!currentChips || currentChips.length === 0) {\r\n          currentChips = [\"South_Korea\"];\r\n          return;\r\n        }\r\n        DataProcessor.setData(this.props.dataMap, currentChips);\r\n        this.setState(this.createState(currentChips));\r\n      }.bind(this),\r\n    });\r\n  }\r\n\r\n  initMaterialise() {\r\n    M.AutoInit();\r\n\r\n    var elem = document.querySelector('.collapsible.expandable');\r\n    M.Collapsible.init(elem, {\r\n      accordion: false\r\n    });\r\n\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      var elems = document.querySelectorAll('.chips');\r\n      M.Chips.init(elems, {\r\n        data: this.state.countriesForAutoComplete,\r\n        placeholder: 'Enter a tag',\r\n        onAutocomplete: function (wat) {\r\n          DataProcessor.setData(this.props.dataMap, wat);\r\n          this.setState(this.createState(wat));\r\n        }.bind(this)\r\n      });\r\n    }.bind(this));\r\n  }\r\n\r\n  render() {\r\n    this.cards = {\r\n      \"Total Cases\": 468451,\r\n      \"Current Cases\": 4845,\r\n      \"Recoveries\": 845,\r\n      \"Deaths\": 48565\r\n    }\r\n    return (\r\n      <main>\r\n        <div className=\"container\">\r\n          <h3 className=\"header\">Global Data</h3>\r\n          <blockquote>\r\n            Shows the global data for Covid-19\r\n          </blockquote>\r\n          <div className=\"row\">\r\n            <InfoCardRow columns={this.state.col.two} cards={this.state.data.global.totalCases} />\r\n            <InfoCardRow columns={this.state.col.three} cards={this.state.data.global.totalDeaths} />\r\n            <div className={this.state.col.one}>\r\n              <ul className=\"collapsible expandable\">\r\n                <li className=\"active\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">filter_drama</i>World Map</div>\r\n                  <div className=\"collapsible-body\"><MapChart chartData={this.state.data.global.worldMapData} /></div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className={this.state.col.two}>\r\n              <ul className=\"collapsible\">\r\n                <li className=\"active\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Total Cases Per Continent</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_cases_chart_map\" chartData={this.state.data.global.continent.cases} title=\"Total Cases Per Continent\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Total Deaths Per Continent</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_deaths_chart_map\" chartData={this.state.data.global.continent.deaths} title=\"Total Deaths Per Continent\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Recent Cases Per Continent</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_cases_chart_map\" chartData={this.state.data.global.continent.recentCases} title=\"Recent Cases Per Continent\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Recent Deaths Per Continent</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_deaths_chart_map\" chartData={this.state.data.global.continent.recentDeaths} title=\"Recent Deaths Per Continent\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className={this.state.col.two}>\r\n              <ul className=\"collapsible\">\r\n                <li className=\"active\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>10 Countries With Highest Total Cases</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_cases_chart_map_country\" chartData={this.state.data.global.country.cases} limit={10} title=\"10 Countries With Highest Total Cases\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>10 Countries With Highest Total Deaths</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_deaths_chart_map_country\" chartData={this.state.data.global.country.deaths} limit={10} title=\"10 Countries With Highest Total Deaths\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>10 Countries With Highest Recent Cases</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_deaths_chart_map_country\" chartData={this.state.data.global.country.recentCases} limit={10} title=\"10 Countries With Highest Recent Cases\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>10 Countries With Highest Recent Deaths</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_cases_chart_map_country\" chartData={this.state.data.global.country.recentDeaths} limit={10} title=\"10 Countries With Highest Recent Deaths\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <h3 className=\"header\">Country Data: {this.state.country.replace(/_/g, \" \")}</h3>\r\n          <blockquote>\r\n            Shows the data for {this.state.country.replace(/_/g, \" \")} on Covid-19.\r\n          </blockquote>\r\n          <div className=\"row\">\r\n            <div className=\"col s12\">\r\n              <div className=\"row\">\r\n                <div className=\"input-field col s12\">\r\n                  <div className=\"chips chips-autocomplete\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <InfoCardRow columns={this.state.col.two} cards={this.state.data.country.totalCases} />\r\n            <InfoCardRow columns={this.state.col.three} cards={this.state.data.country.totalDeaths} />\r\n          </div >\r\n          <div className={this.state.col.one}>\r\n            <ul className=\"collapsible\">\r\n              <li className=\"active\">\r\n                <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Cumulative Cases over time for {this.state.country.replace(/_/g, \" \")}</div>\r\n                <div className=\"collapsible-body\"><MultiDateChart id=\"country_cumulative_cases\" color='rgba(43,177,26, 0.6)' chartData={this.state.data.country.cumulative.cases} titleDD=\"Cumulative Cases\" title={\"Cumulative Cases (\" + this.state.country.replace(/_/g, \" \") + \")\"} legendPosition=\"bottom\" /></div>\r\n              </li>\r\n              <li className=\"\">\r\n                <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Cumulative Deaths over time for {this.state.country.replace(/_/g, \" \")}</div>\r\n                <div className=\"collapsible-body\"><MultiDateChart id=\"country_cumulative_deaths\" color='rgba(205,175,28, 0.6)' chartData={this.state.data.country.cumulative.deaths} titleDD=\"Cumulative Deaths\" title={\"Cumulative Deaths (\" + this.state.country.replace(/_/g, \" \") + \")\"} legendPosition=\"bottom\" /></div>\r\n              </li>\r\n              <li className=\"\">\r\n                <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Daily Cases for {this.state.country.replace(/_/g, \" \")}</div>\r\n                <div className=\"collapsible-body\"><MultiDateChart id=\"country_daily_cases\" color='rgba(28,142,205, 0.6)' chartData={this.state.data.country.daily.cases} titleDD=\"Daily Cases\" title={\"Daily Cases (\" + this.state.country.replace(/_/g, \" \") + \")\"} legendPosition=\"bottom\" /></div>\r\n              </li>\r\n              <li className=\"\">\r\n                <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Daily Deaths for {this.state.country.replace(/_/g, \" \")}</div>\r\n                <div className=\"collapsible-body\"><MultiDateChart id=\"country_daily_deaths\" color='rgba(199,0,57, 0.6)' chartData={this.state.data.country.daily.deaths} titleDD=\"Daily Deaths\" title={\"Daily Deaths (\" + this.state.country.replace(/_/g, \" \") + \")\"} legendPosition=\"bottom\" /></div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </main >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import data from './data.json'; //https://www.ecdc.europa.eu/\r\nimport countries from './countries.json'; //https://datahub.io/JohnSnowLabs/country-and-continent-codes-list\r\nimport geo_location from './long_lat.json';//https://developers.google.com/public-data/docs/canonical/countries_csv\r\n\r\nconst Data = {\r\n\r\n  initialiseData: async function () {\r\n    if (this.shouldGetDataFromFile()) {\r\n      return this.getDataFromFile();\r\n    } else {\r\n      //bypass cors issue https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe\r\n      let response = await fetch(\"https://cors-anywhere.herokuapp.com/https://opendata.ecdc.europa.eu/covid19/casedistribution/json/\")\r\n        .then(function (response) {\r\n          return response.json();\r\n        })\r\n        .then(function (json) {\r\n          return this.getDataMap(json);\r\n        }.bind(this))\r\n        .catch(function (err) {\r\n          console.log(\"Can’t access response. (Getting Data from File) Blocked by browser?\" + err)\r\n          return this.getDataFromFile();\r\n        }.bind(this))\r\n      return response;\r\n    }\r\n  },\r\n\r\n  getDataMap: function (response) {\r\n    var countryMap = new Map();\r\n    var exclusionList = [];\r\n    response.records.forEach(element => {\r\n      var continentCode = undefined;\r\n      var continentName = undefined;\r\n\r\n      var latitude = undefined;\r\n      var longitude = undefined;\r\n\r\n      geo_location.forEach(location => {\r\n        if ((location.country === element.geoId || location.name === element.countriesAndTerritories.replace(/_/g, \" \"))) {\r\n          latitude = location.latitude;\r\n          longitude = location.longitude;\r\n        }\r\n      })\r\n\r\n      countries.forEach(country => {\r\n        if (country.Three_Letter_Country_Code === element.countryterritoryCode || country.Two_Letter_Country_Code === element.geoId || country.Continent_Name === element.continentExp) {\r\n          continentCode = country.Continent_Code;\r\n          continentName = country.Continent_Name;\r\n        }\r\n      })\r\n\r\n      element[\"continentCode\"] = continentCode;\r\n      element[\"continentName\"] = continentName;\r\n\r\n      element[\"latitude\"] = latitude;\r\n      element[\"longitude\"] = longitude;\r\n\r\n      if(element[\"latitude\"] && element[\"longitude\"] && element[\"continentCode\"] && element[\"continentName\"]) {\r\n        if (countryMap.get(element.countriesAndTerritories) !== undefined) {\r\n          countryMap.get(element.countriesAndTerritories).push(element);\r\n        } else {\r\n          countryMap.set(element.countriesAndTerritories, [element]);\r\n        }\r\n      } else {\r\n        exclusionList.push(element);\r\n      }\r\n    });\r\n\r\n    console.log(\"Failed to add following to data:\", exclusionList);\r\n    return countryMap;\r\n  },\r\n\r\n  shouldGetDataFromFile: function () {\r\n    var params = (new URL(document.location)).searchParams;\r\n    if(params.get(\"live\") === \"true\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  getDataFromFile: function () {\r\n    return this.getDataMap(data);\r\n  }\r\n}\r\n\r\nexport default Data;","import React from 'react'\r\nimport './loader.scss';\r\n\r\nconst LoaderExampleText = () => (\r\n  <div>\r\n    <center>\r\n      <div className=\"loader\"></div>\r\n    </center>\r\n  </div>\r\n)\r\n\r\nexport default LoaderExampleText\r\n","import React, { Component } from 'react';\r\nimport './content.scss';\r\nimport M from \"materialize-css\";\r\nimport Dashboard from './dashboard/Dashboard';\r\nimport Data from '../_data/DataLoader'\r\nimport Loader from './loader/Loader'\r\n\r\n\r\nclass Content extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      isLoggedIn: false\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = Data.initialiseData();\r\n    data.then(function (map) {\r\n      this.setState({\r\n        isLoggedIn: true,\r\n        dataMap: map\r\n      });\r\n    }.bind(this));\r\n\r\n    M.AutoInit();\r\n  }\r\n\r\n  render() {\r\n    var renderItem = <Loader />;\r\n    if (this.state.isLoggedIn) {\r\n      renderItem = <Dashboard dataMap={this.state.dataMap}/>;\r\n    }\r\n    return (\r\n      <main>\r\n        <div>\r\n          {renderItem}\r\n        </div>\r\n      </main >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n\r\n    return (\r\n      <footer className=\"page-footer\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col l6 s12\">\r\n                <h5 className=\"white-text\">What is this?</h5>\r\n                <p className=\"grey-text text-lighten-4\">This page is a Dashboard that visialises Covid-19 information provided by ecdc. It uses React, materializecss, Chart.js and Leaflet to display the visualisations in a coherent manner.</p>\r\n                <li><a className=\"grey-text text-lighten-3\" href=\"/data-vis-fianl-covid-19-sk/?live=true\">See Latest Data go to /data-vis-fianl-covid-19-sk?live=true</a></li>\r\n                <li><a className=\"grey-text text-lighten-3\" href=\"/data-vis-fianl-covid-19-sk/\">See Cached Data from Apr 13 2020 go to /data-vis-fianl-covid-19-sk/</a></li>\r\n                <li><a className=\"grey-text text-lighten-3\" href=\"/data-vis-fianl-covid-19-sk/?live=true&country=Ireland\">To See Data for a specific country you can put in ?country=Irelend</a></li>\r\n              </div>\r\n              <div className=\"col l4 offset-l2 s12\">\r\n                <h5 className=\"white-text\">Data Used:</h5>\r\n                <ul>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://www.ecdc.europa.eu/\">Covid-19 - ecdc</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://datahub.io/JohnSnowLabs/country-and-continent-codes-list\">Country Data - JohnSnowLabs</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://developers.google.com/public-data/docs/canonical/countries_csv\">LatLng Data - Google</a></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer-copyright\">\r\n            <div className=\"container\">\r\n            Visualisation by Daniel Foth\r\n            <a className=\"grey-text text-lighten-4 right\" href=\"/data-vis-fianl-covid-19-sk/?live=true\">Data: Latest</a>\r\n            <a className=\"grey-text text-lighten-4 right\" href=\"/data-vis-fianl-covid-19-sk/\">Data: Apr 13 2020</a>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './_header/Header.js';\r\nimport Content from './_content/Content.js';\r\nimport Footer from './_footer/Footer.js';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <Content/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}