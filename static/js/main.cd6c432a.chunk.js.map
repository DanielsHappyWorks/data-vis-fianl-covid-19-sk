{"version":3,"sources":["_header/Header.js","charts/MapChart.js","charts/MultiChart.js","charts/LineChart.js","charts/BarChart.js","_data/DataProcessor.js","_content/widget/InfoCard/InfoCard.js","_content/widget/InfoCardRow/InfoCardRow.js","_content/dashboard/Dashboard.js","_data/DataLoader.js","_content/loader/Loader.js","_content/Content.js","_footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["SuperCoolComponent","M","AutoInit","className","Component","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapChart","props","state","map","getAllSettings","color","1","2","3","4","elems","document","querySelectorAll","newSate","FormSelect","init","getSelectedValues","this","setState","onChange","handleClick","bind","value","defaultValue","center","zoom","zoomControl","style","width","height","TileLayer","attribution","url","detectRetina","maxZoom","maxNativeZoom","chartData","data","CircleMarker","latLong","key","country","opacity","radius","Popup","replace","totalCases","totalDeaths","recentCases","recentDeaths","MultiChart","chart","getElementById","id","options","title","display","displayTitle","text","legend","position","legendPosition","displayLegend","cutoutPercentage","getChart","defaultProps","LineChart","location","BarChart","Data","undefined","setData","newData","Number","getTotal","toLocaleString","getLatest","getMortality","getWorldMapData","getCountersPerValue","getCountersPerValueLatest","getData","updateDashboardState","newState","labels","Array","from","global","continent","cases","keys","datasets","values","itemToGroupBy","itemToCount","counter","Map","forEach","element","listItem","get","set","parseInt","mostRecentDate","Date","year","month","day","getTime","deaths","deathsCases","worldData","totalCasesTracker","totalDeathsTracker","recentCasesTracker","recentDeathsTracker","transformedElem","countriesAndTerritories","latitude","longitude","push","totalCasesMinMax","normalizeBetweenTwoRanges","Math","min","apply","max","totalDeathsMinMax","recentCasesMinMax","recentDeathsMinMax","val","minVal","maxVal","newMin","newMax","mostRecentCase","InfoCard","columns","heading","InfoCardRow","Object","cards","Dashboard","name","URL","searchParams","dataMap","includes","createState","countriesForAutoComplete","fromEntries","k","countries","label","backgroundColor","DataProcessor","elem","querySelector","Collapsible","accordion","Autocomplete","onAutocomplete","wat","addEventListener","limit","x","list","j","length","sort","a","b","slice","col","two","three","one","worldMapData","getDataAsChartData","type","htmlFor","initialiseData","shouldGetDataFromFile","getDataFromFile","fetch","then","response","json","getDataMap","catch","err","console","log","countryMap","exclusionList","records","continentCode","continentName","geo_location","geoId","Three_Letter_Country_Code","countryterritoryCode","Two_Letter_Country_Code","Continent_Name","continentExp","Continent_Code","window","pathname","LoaderExampleText","class","Content","isLoggedIn","renderItem","Loader","Footer","href","React","App","Header","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd6c432a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './header.scss';\r\n\r\n// Import Materialize\r\nimport M from \"materialize-css\";\r\n\r\n\r\nclass SuperCoolComponent extends Component {\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <div className=\"nav-wrapper\">\r\n            <div className=\"brand-logo center\">COVID-19</div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SuperCoolComponent;","import React, { Component } from 'react';\r\nimport { Map, TileLayer, CircleMarker, Popup } from \"react-leaflet\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport M from \"materialize-css\";\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nclass MapChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      map: this.getAllSettings()[1].map,\r\n      color: this.getAllSettings()[1].color,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    M.AutoInit();\r\n  }\r\n\r\n  getAllSettings() {\r\n    return {\r\n      1: {\r\n        map: \"totalCases\",\r\n        color: \"#2BB11A\",\r\n      },\r\n      2: {\r\n        map: \"totalDeaths\",\r\n        color: \"#CDAF1C\",\r\n      },\r\n      3: {\r\n        map: \"recentCases\",\r\n        color: \"#1C8ECD\",\r\n      },\r\n      4: {\r\n        map: \"recentDeaths\",\r\n        color: \"#C70039\",\r\n      }\r\n    };\r\n  }\r\n\r\n  handleClick() {\r\n    var elems = document.querySelectorAll('select');\r\n    var instances = M.FormSelect.init(elems);\r\n    var newSate = instances[0].getSelectedValues()[0];\r\n    this.setState({\r\n      map: this.getAllSettings()[newSate].map,\r\n      color: this.getAllSettings()[newSate].color\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"input-field col s12\">\r\n          <select onChange={this.handleClick.bind(this)}>\r\n            <option value=\"1\" defaultValue>Total Cases</option>\r\n            <option value=\"3\">Recent Cases</option>\r\n            <option value=\"2\">Total Deaths</option>\r\n            <option value=\"4\">Recent Deaths</option>\r\n          </select>\r\n          <label>Select Map</label>\r\n        </div>\r\n        <Map\r\n          center={[0, 0]}\r\n          zoom=\"2\"\r\n          zoomControl=\"false\"\r\n          style={{ width: '100%', height: '500px' }}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            detectRetina=\"true\"\r\n            maxZoom=\"10\"\r\n            maxNativeZoom=\"10\"\r\n          />\r\n\r\n          {this.props.chartData.map(data => {\r\n            if (data[this.state.map] !== 0) {\r\n              return (\r\n                <CircleMarker\r\n                  center={data.latLong}\r\n                  key={data.country + \"_cases\"}\r\n                  opacity={0.7}\r\n                  radius={data[this.state.map + \"MinMax\"]}\r\n                  color={this.state.color}\r\n                >\r\n                  <Popup>Location: {data.country.replace(/_/g, \" \")}<br></br>\r\n                Total Cases: {data.totalCases}<br></br>\r\n                Total Deaths: {data.totalDeaths}<br></br>\r\n                Recent Cases: {data.recentCases}<br></br>\r\n                Recent Deaths: {data.recentDeaths}\r\n                  </Popup>\r\n                </CircleMarker>\r\n              )\r\n            }\r\n          }\r\n          )}\r\n        </Map>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapChart;","import React, { Component } from 'react';\r\nimport { Pie, Bar, Line, Polar, Doughnut } from 'react-chartjs-2';\r\nimport M from \"materialize-css\";\r\n\r\n\r\nclass MultiChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: props.chartData,\r\n      chart: \"1\"\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    displayTitle: true,\r\n    displayLegend: true,\r\n    legendPosition: 'right',\r\n    title: 'Unset Title'\r\n  }\r\n\r\n  componentDidMount() {\r\n    M.AutoInit();\r\n  }\r\n\r\n  handleClick() {\r\n    var elems = document.getElementById(this.props.id + 'select');\r\n    var instances = M.FormSelect.init(elems);\r\n    var newSate = instances.getSelectedValues()[0];\r\n    this.setState({\r\n      chart: newSate,\r\n    });\r\n  }\r\n\r\n  getChart(chart) {\r\n    if (chart === \"1\") {\r\n      return <Bar\r\n        data={this.state.chartData}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Bar Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"2\") {\r\n      return <Pie\r\n        data={this.state.chartData}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Pie Chart\",\r\n          },\r\n          legend: {\r\n            display: this.props.displayLegend,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"3\") {\r\n      return <Doughnut\r\n        data={this.state.chartData}\r\n        options={{\r\n          cutoutPercentage: 50,\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Doughnut Chart\",\r\n          },\r\n          legend: {\r\n            display: this.props.displayLegend,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"4\") {\r\n      return <Polar\r\n        data={this.state.chartData}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Polar Chart\",\r\n          },\r\n          legend: {\r\n            display: this.props.displayLegend,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"5\") {\r\n      return <Line\r\n        data={this.state.chartData}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Line Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var chart = this.getChart(this.state.chart);\r\n    return (\r\n      <div>\r\n        <div className=\"input-field col s12\">\r\n          <select id={this.props.id + 'select'} onChange={this.handleClick.bind(this)}>\r\n            <option value=\"1\" defaultValue>{this.props.title}- Bar Chart</option>\r\n            <option value=\"2\">{this.props.title} - Pie Chart</option>\r\n            <option value=\"3\">{this.props.title} - Doughnut Chart</option>\r\n            <option value=\"4\">{this.props.title} - Polar Chart</option>\r\n            <option value=\"5\">{this.props.title} - Line Chart</option>\r\n          </select>\r\n          <label>Select Chart</label>\r\n        </div>\r\n        {chart}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MultiChart;","import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nclass LineChart extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      chartData:props.chartData\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    displayTitle:true,\r\n    displayLegend: true,\r\n    legendPosition:'right',\r\n    location:'City'\r\n  }\r\n\r\n  render(){\r\n    return (\r\n\r\n      <Line\r\n        data={this.state.chartData}\r\n        options={{\r\n          title:{\r\n            display:this.props.displayTitle,\r\n            text:this.props.location,\r\n          },\r\n          legend:{\r\n            display:this.props.displayLegend,\r\n            position:this.props.legendPosition\r\n          }\r\n        }}\r\n      />\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default LineChart;","import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nclass BarChart extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      chartData:props.chartData\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    displayTitle:true,\r\n    displayLegend: true,\r\n    legendPosition:'right',\r\n    location:'City'\r\n  }\r\n\r\n  render(){\r\n    return (\r\n\r\n        <Bar\r\n          data={this.state.chartData}\r\n          options={{\r\n            title:{\r\n              display:this.props.displayTitle,\r\n              text:this.props.location,\r\n            },\r\n            legend:{\r\n              display:this.props.displayLegend,\r\n              position:this.props.legendPosition\r\n            }\r\n          }}\r\n        />\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default BarChart;","const Data = {\r\n  data: undefined,\r\n\r\n  setData: function (newData, country) {\r\n    //Mon Apr 13 2020 00:00:00 GMT+0100 <- non live data\r\n    this.data = {\r\n      \"map\": newData,\r\n      \"global\": {\r\n        \"totalCases\": {\r\n          \"Total Cases\": Number(this.getTotal(newData, 'cases')).toLocaleString(),\r\n          \"Recent Cases\": Number(this.getLatest(newData, 'cases')).toLocaleString()\r\n        },\r\n        \"totalDeaths\": {\r\n          \"Total Deaths\": Number(this.getTotal(newData, 'deaths')).toLocaleString(),\r\n          \"Recent Deaths\": Number(this.getLatest(newData, 'deaths')).toLocaleString(),\r\n          \"Mortality Rate\": Number(this.getMortality(newData)).toLocaleString() + \"%\"\r\n        },\r\n        \"worldMapData\": this.getWorldMapData(newData),\r\n        \"continent\": {\r\n          \"cases\": this.getCountersPerValue(newData, 'continentName', 'cases'),\r\n          \"deaths\": this.getCountersPerValue(newData, 'continentName', 'deaths'),\r\n          \"recentCases\": this.getCountersPerValueLatest(newData, 'continentName', 'cases'),\r\n          \"recentDeaths\": this.getCountersPerValueLatest(newData, 'continentName', 'deaths')\r\n        },\r\n        \"country\": {\r\n          \"cases\": this.getCountersPerValue(newData, 'countriesAndTerritories', 'cases'),\r\n          \"deaths\": this.getCountersPerValue(newData, 'countriesAndTerritories', 'deaths'),\r\n          \"recentCases\": this.getCountersPerValueLatest(newData, 'countriesAndTerritories', 'cases'),\r\n          \"recentDeaths\": this.getCountersPerValueLatest(newData, 'countriesAndTerritories', 'deaths')\r\n        }\r\n      },\r\n      \"country\": {\r\n        \"totalCases\": {\r\n          \"Total Cases\": Number(this.getTotal(newData, 'cases', country)).toLocaleString(),\r\n          \"Recent Cases\": Number(this.getLatest(newData, 'cases', country)).toLocaleString()\r\n        },\r\n        \"totalDeaths\": {\r\n          \"Total Deaths\": Number(this.getTotal(newData, 'deaths', country)).toLocaleString(),\r\n          \"Recent Deaths\": Number(this.getLatest(newData, 'deaths', country)).toLocaleString(),\r\n          \"Mortality Rate\": Number(this.getMortality(newData, country)).toLocaleString() + \"%\"\r\n        },\r\n      }\r\n    }\r\n  },\r\n\r\n  getData: function () {\r\n    return this.data;\r\n  },\r\n\r\n  updateDashboardState: function (newState) {\r\n    newState.chartData.labels = Array.from(this.data.global.continent.cases.keys());\r\n    newState.chartData.datasets[0].data = Array.from(this.data.global.continent.cases.values());;\r\n    return newState;\r\n  },\r\n\r\n  getCountersPerValue: function (data, itemToGroupBy, itemToCount) {\r\n    var counter = new Map()\r\n    data.forEach(element => {\r\n      element.forEach(listItem => {\r\n        if (counter.get(listItem[itemToGroupBy]) !== undefined) {\r\n          counter.set(listItem[itemToGroupBy], counter.get(listItem[itemToGroupBy]) + parseInt(listItem[itemToCount]));\r\n        } else {\r\n          counter.set(listItem[itemToGroupBy], parseInt(listItem[itemToCount]));\r\n        }\r\n      });\r\n    });\r\n    return counter;\r\n  },\r\n\r\n  getCountersPerValueLatest: function (data, itemToCount, value) {\r\n    var counter = new Map()\r\n    var mostRecentDate = new Date(1999, 1, 1);\r\n    data.forEach(element => {\r\n      element.forEach(listItem => {\r\n        if (mostRecentDate < new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day))) {\r\n          mostRecentDate = new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day));\r\n          counter.set(listItem[itemToCount], parseInt(listItem[value]));\r\n        } else if (mostRecentDate.getTime() === new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day)).getTime()) {\r\n          if (counter.get(listItem[itemToCount]) !== undefined) {\r\n            counter.set(listItem[itemToCount], counter.get(listItem[itemToCount]) + parseInt(listItem[value]));\r\n          } else {\r\n            counter.set(listItem[itemToCount], parseInt(listItem[value]));\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return counter;\r\n  },\r\n\r\n  getWorldMapData: function (data) {\r\n    var cases = this.getCountersPerValue(data, 'countriesAndTerritories', 'cases');\r\n    var deaths = this.getCountersPerValue(data, 'countriesAndTerritories', 'deaths');\r\n    var recentCases =  this.getCountersPerValueLatest(data, 'countriesAndTerritories', 'cases');\r\n    var deathsCases =  this.getCountersPerValueLatest(data, 'countriesAndTerritories', 'deaths');\r\n    var worldData = []\r\n    var totalCasesTracker = [];\r\n    var totalDeathsTracker = [];\r\n    var recentCasesTracker = [];\r\n    var recentDeathsTracker = [];\r\n    data.forEach(element => {\r\n      var transformedElem = {};\r\n      transformedElem.country = element[0].countriesAndTerritories;\r\n      transformedElem.latLong = [element[0].latitude, element[0].longitude];\r\n      transformedElem.totalCases = cases.get(element[0].countriesAndTerritories)\r\n      totalCasesTracker.push(transformedElem.totalCases);\r\n      transformedElem.totalDeaths = deaths.get(element[0].countriesAndTerritories)\r\n      totalDeathsTracker.push(transformedElem.totalDeaths);\r\n      transformedElem.recentCases = recentCases.get(element[0].countriesAndTerritories)\r\n      recentCasesTracker.push(transformedElem.recentCases);\r\n      transformedElem.recentDeaths = deathsCases.get(element[0].countriesAndTerritories)\r\n      recentDeathsTracker.push(transformedElem.recentDeaths);\r\n      worldData.push(transformedElem)\r\n    });\r\n    worldData.forEach(element => {\r\n      element.totalCasesMinMax = this.normalizeBetweenTwoRanges(element.totalCases, Math.min.apply(null, totalCasesTracker), Math.max.apply(null, totalCasesTracker), 5, 100);\r\n      element.totalDeathsMinMax = this.normalizeBetweenTwoRanges(element.totalDeaths, Math.min.apply(null, totalDeathsTracker), Math.max.apply(null, totalDeathsTracker), 5, 100);\r\n      element.recentCasesMinMax = this.normalizeBetweenTwoRanges(element.recentCases, Math.min.apply(null, recentCasesTracker), Math.max.apply(null, recentCasesTracker), 5, 100);\r\n      element.recentDeathsMinMax = this.normalizeBetweenTwoRanges(element.recentDeaths, Math.min.apply(null, recentDeathsTracker), Math.max.apply(null, recentDeathsTracker), 5, 100);\r\n    })\r\n    return worldData;\r\n  },\r\n\r\n  normalizeBetweenTwoRanges: function (val, minVal, maxVal, newMin, newMax) {\r\n    return newMin + (val - minVal) * (newMax - newMin) / (maxVal - minVal);\r\n  },\r\n\r\n  getMortality: function (data, country) {\r\n    var totalCases = this.getTotal(data, 'cases', country);\r\n    var totalDeaths = this.getTotal(data, 'deaths', country);\r\n    return totalDeaths / totalCases * 100;\r\n  },\r\n\r\n  getTotal: function (data, value, country) {\r\n    var counter = 0\r\n    data.forEach(element => {\r\n      element.forEach(listItem => {\r\n        if (country === undefined || country === listItem.countriesAndTerritories) {\r\n          counter += parseInt(listItem[value])\r\n        }\r\n      });\r\n    });\r\n    return counter;\r\n  },\r\n\r\n  getLatest: function (data, value, country) {\r\n    var counter = 0\r\n    data.forEach(element => {\r\n      var mostRecentDate = new Date(1999, 1, 1);\r\n      var mostRecentCase = 0\r\n      element.forEach(listItem => {\r\n        if ((mostRecentDate < new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day))) && (country === undefined || country === listItem.countriesAndTerritories)) {\r\n          mostRecentDate = new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day));\r\n          mostRecentCase = parseInt(listItem[value]);\r\n        }\r\n      });\r\n      counter += mostRecentCase;\r\n    });\r\n    return counter;\r\n  },\r\n}\r\n\r\nexport default Data;","import React, { Component } from 'react';\r\nimport M from \"materialize-css\";\r\nimport './InfoCard.scss';\r\n\r\n\r\nclass InfoCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // Auto initialize all the things!\r\n        M.AutoInit();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.columns}>\r\n                <div className=\"card InfoCard\">\r\n                    <h5 className=\"header\">{this.props.heading}</h5>\r\n                    <p>{this.props.data}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoCard;","import React, { Component } from 'react';\r\nimport M from \"materialize-css\";\r\nimport InfoCard from '../InfoCard/InfoCard';\r\n\r\n\r\nclass InfoCardRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Auto initialize all the things!\r\n        M.AutoInit();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {Object.keys(this.props.cards).map(key => (\r\n                    <InfoCard key={key} columns={this.props.columns} heading={key} data={this.props.cards[key]} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoCardRow;","import React, { Component } from 'react';\r\nimport M from \"materialize-css\";\r\nimport MapChart from '../../charts/MapChart';\r\nimport MultiChart from '../../charts/MultiChart';\r\nimport LineChart from '../../charts/LineChart';\r\nimport BarChart from '../../charts/BarChart';\r\nimport DataProcessor from '../../_data/DataProcessor'\r\nimport InfoCardRow from '../widget/InfoCardRow/InfoCardRow'\r\n\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var params = (new URL(document.location)).searchParams;\r\n    var name = params.get(\"country\");\r\n    var country = Array.from(this.props.dataMap.keys()).includes(name) ? name : \"South_Korea\";\r\n\r\n    this.state = this.createState(country);\r\n  }\r\n\r\n  createState(country) {\r\n    var countriesForAutoComplete = Object.fromEntries(this.props.dataMap);\r\n    Object.keys(countriesForAutoComplete).forEach(k => countriesForAutoComplete[k] = null)\r\n\r\n    var newState = {\r\n      countries: Array.from(this.props.dataMap.keys()),\r\n      countriesForAutoComplete: countriesForAutoComplete,\r\n      chartData: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Cases',\r\n            data: [],\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n              'rgba(255, 206, 86, 0.6)',\r\n              'rgba(75, 192, 192, 0.6)',\r\n              'rgba(153, 102, 255, 0.6)',\r\n              'rgba(255, 159, 64, 0.6)',\r\n              'rgba(255, 99, 132, 0.6)'\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n\r\n    newState[\"country\"] = country;\r\n\r\n    DataProcessor.setData(this.props.dataMap, country);\r\n    newState[\"data\"] = DataProcessor.getData();\r\n    newState[\"col\"] = {\r\n      \"two\": \"col s12 m12 l6\",\r\n      \"three\": \"col s12 m6 l4\",\r\n      \"four\": \"col s12 m6 l3\",\r\n      \"five\": \"col s12 m6 l2\"\r\n    }\r\n    return newState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n\r\n    var elem = document.querySelector('.collapsible.expandable');\r\n    M.Collapsible.init(elem, {\r\n      accordion: false\r\n    });\r\n\r\n    var elems = document.querySelectorAll('.autocomplete');\r\n    M.Autocomplete.init(elems, {\r\n      data: this.state.countriesForAutoComplete,\r\n      onAutocomplete: function (wat) {\r\n        DataProcessor.setData(this.props.dataMap, wat);\r\n        this.setState(this.createState(wat));\r\n      }.bind(this)\r\n    });\r\n  }\r\n\r\n  initMaterialise() {\r\n    M.AutoInit();\r\n\r\n    var elem = document.querySelector('.collapsible.expandable');\r\n    M.Collapsible.init(elem, {\r\n      accordion: false\r\n    });\r\n\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      var elems = document.querySelectorAll('.autocomplete');\r\n      M.Autocomplete.init(elems, {\r\n        data: this.state.countriesForAutoComplete,\r\n        onAutocomplete: function (wat) {\r\n          DataProcessor.setData(this.props.dataMap, wat);\r\n          this.setState(this.createState(wat));\r\n        }.bind(this)\r\n      });\r\n    }.bind(this));\r\n  }\r\n\r\n  getDataAsChartData(data, limit) {\r\n    var chartData = {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"Value\",\r\n          data: [],\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.6)',\r\n            'rgba(54, 162, 235, 0.6)',\r\n            'rgba(255, 206, 86, 0.6)',\r\n            'rgba(75, 192, 192, 0.6)',\r\n            'rgba(153, 102, 255, 0.6)',\r\n            'rgba(255, 159, 64, 0.6)',\r\n            'rgba(255, 99, 90, 0.6)',\r\n            'rgba(100, 162, 235, 0.6)',\r\n            'rgba(255, 150, 86, 0.6)'\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n    chartData.labels = Array.from(data.keys()).map(function(x){return x.replace(/_/g, ' ');});\r\n    chartData.datasets[0].data = Array.from(data.values());\r\n    \r\n\r\n    var list = [];\r\n    for (var j = 0; j < chartData.labels.length; j++)\r\n      list.push({ 'key': chartData.labels[j], 'value': chartData.datasets[0].data[j] });\r\n\r\n    list.sort(function (a, b) {\r\n      return b.value - a.value;\r\n    });\r\n\r\n    for (var k = 0; k < list.length; k++) {\r\n      chartData.labels[k] = list[k].key;\r\n      chartData.datasets[0].data[k] = list[k].value;\r\n    }\r\n\r\n    if (limit) {\r\n      chartData.labels = chartData.labels.slice(0, limit);\r\n      chartData.datasets[0].data = chartData.datasets[0].data.slice(0, limit);\r\n    }\r\n\r\n    return chartData;\r\n  }\r\n\r\n  render() {\r\n    this.cards = {\r\n      \"Total Cases\": 468451,\r\n      \"Current Cases\": 4845,\r\n      \"Recoveries\": 845,\r\n      \"Deaths\": 48565\r\n    }\r\n    return (\r\n      <main>\r\n        <div className=\"container\">\r\n\r\n          <h3 className=\"header\">Global Data</h3>\r\n          <blockquote>\r\n            Shows the global data for Covid-19\r\n          </blockquote>\r\n          <div className=\"row\">\r\n            <InfoCardRow columns={this.state.col.two} cards={this.state.data.global.totalCases} />\r\n            <InfoCardRow columns={this.state.col.three} cards={this.state.data.global.totalDeaths} />\r\n            <div className={this.state.col.one}>\r\n              <ul className=\"collapsible expandable\">\r\n                <li className=\"active\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">filter_drama</i>World Map</div>\r\n                  <div className=\"collapsible-body\"><MapChart chartData={this.state.data.global.worldMapData} /></div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className={this.state.col.two}>\r\n              <ul className=\"collapsible\">\r\n                <li className=\"active\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">pie_chart_outlined</i>Total Cases Per Continent</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_cases_chart_map\" chartData={this.getDataAsChartData(this.state.data.global.continent.cases)} title=\"Total Cases Per Continent\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">pie_chart_outlined</i>Total Deaths Per Continent</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_deaths_chart_map\" chartData={this.getDataAsChartData(this.state.data.global.continent.deaths)} title=\"Total Deaths Per Continent\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">pie_chart_outlined</i>Recent Cases Per Continent</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_cases_chart_map\" chartData={this.getDataAsChartData(this.state.data.global.continent.recentCases)} title=\"Recent Cases Per Continent\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">pie_chart_outlined</i>Recent Deaths Per Continent</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_deaths_chart_map\" chartData={this.getDataAsChartData(this.state.data.global.continent.recentDeaths)} title=\"Recent Deaths Per Continent\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className={this.state.col.two}>\r\n              <ul className=\"collapsible\">\r\n                <li className=\"active\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">pie_chart_outlined</i>10 Countries With Highest Total Cases</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_deaths_chart_map_country\" chartData={this.getDataAsChartData(this.state.data.global.country.cases, 10)} title=\"10 Countries With Highest Total Cases\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">pie_chart_outlined</i>10 Countries With Highest Total Deaths</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_cases_chart_map_country\" chartData={this.getDataAsChartData(this.state.data.global.country.deaths, 10)} title=\"10 Countries With Highest Total Deaths\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">pie_chart_outlined</i>10 Countries With Highest Recent Cases</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_deaths_chart_map_country\" chartData={this.getDataAsChartData(this.state.data.global.country.recentCases, 10)} title=\"10 Countries With Highest Recent Cases\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">pie_chart_outlined</i>10 Countries With Highest Recent Deaths</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_deaths_chart_map_country\" chartData={this.getDataAsChartData(this.state.data.global.country.recentDeaths, 10)} title=\"10 Countries With Highest Recent Deaths\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <h3 className=\"header\">Country Data: {this.state.country.replace(/_/g, \" \")}</h3>\r\n          <blockquote>\r\n            Shows the data for {this.state.country.replace(/_/g, \" \")} on Covid-19\r\n          </blockquote>\r\n          <div className=\"row\">\r\n            <div className=\"col s12\">\r\n              <div className=\"row\">\r\n                <div className=\"input-field col s12\">\r\n                  <i className=\"material-icons prefix\">textsms</i>\r\n                  <input type=\"text\" id=\"autocomplete-input\" className=\"autocomplete\" />\r\n                  <label htmlFor=\"autocomplete-input\">Autocomplete</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <InfoCardRow columns={this.state.col.two} cards={this.state.data.country.totalCases} />\r\n          <InfoCardRow columns={this.state.col.three} cards={this.state.data.country.totalDeaths} />\r\n        </div >\r\n      </main >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import data from './data.json'; //https://www.ecdc.europa.eu/\r\nimport countries from './countries.json'; //https://datahub.io/JohnSnowLabs/country-and-continent-codes-list\r\nimport geo_location from './long_lat.json';//https://developers.google.com/public-data/docs/canonical/countries_csv\r\n\r\nconst Data = {\r\n\r\n  initialiseData: async function () {\r\n    if (this.shouldGetDataFromFile()) {\r\n      return this.getDataFromFile();\r\n    } else {\r\n      //bypass cors issue https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe\r\n      let response = await fetch(\"https://cors-anywhere.herokuapp.com/https://opendata.ecdc.europa.eu/covid19/casedistribution/json/\")\r\n        .then(function (response) {\r\n          return response.json();\r\n        })\r\n        .then(function (json) {\r\n          return this.getDataMap(json);\r\n        }.bind(this))\r\n        .catch(function (err) {\r\n          console.log(\"Can’t access response. (Getting Data from File) Blocked by browser?\" + err)\r\n          return this.getDataFromFile();\r\n        }.bind(this))\r\n      return response;\r\n    }\r\n  },\r\n\r\n  getDataMap: function (response) {\r\n    var countryMap = new Map();\r\n    var exclusionList = [];\r\n    response.records.forEach(element => {\r\n      var continentCode = undefined;\r\n      var continentName = undefined;\r\n\r\n      var latitude = undefined;\r\n      var longitude = undefined;\r\n\r\n      geo_location.forEach(location => {\r\n        if ((location.country === element.geoId || location.name === element.countriesAndTerritories.replace(/_/g, \" \"))) {\r\n          latitude = location.latitude;\r\n          longitude = location.longitude;\r\n        }\r\n      })\r\n\r\n      countries.forEach(country => {\r\n        if (country.Three_Letter_Country_Code === element.countryterritoryCode || country.Two_Letter_Country_Code === element.geoId || country.Continent_Name === element.continentExp) {\r\n          continentCode = country.Continent_Code;\r\n          continentName = country.Continent_Name;\r\n        }\r\n      })\r\n\r\n      element[\"continentCode\"] = continentCode;\r\n      element[\"continentName\"] = continentName;\r\n\r\n      element[\"latitude\"] = latitude;\r\n      element[\"longitude\"] = longitude;\r\n\r\n      if(element[\"latitude\"] && element[\"longitude\"] && element[\"continentCode\"] && element[\"continentName\"]) {\r\n        if (countryMap.get(element.countriesAndTerritories) !== undefined) {\r\n          countryMap.get(element.countriesAndTerritories).push(element);\r\n        } else {\r\n          countryMap.set(element.countriesAndTerritories, [element]);\r\n        }\r\n      } else {\r\n        exclusionList.push(element);\r\n      }\r\n    });\r\n\r\n    console.log(\"Failed to add following to data:\", exclusionList);\r\n    return countryMap;\r\n  },\r\n\r\n  shouldGetDataFromFile: function () {\r\n    if(window.location.pathname === \"/covid_19/live\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  getDataFromFile: function () {\r\n    return this.getDataMap(data);\r\n  }\r\n}\r\n\r\nexport default Data;","import React from 'react'\r\nimport './loader.scss';\r\n\r\nconst LoaderExampleText = () => (\r\n  <div>\r\n    <center>\r\n      <div class=\"loader\"></div>\r\n    </center>\r\n  </div>\r\n)\r\n\r\nexport default LoaderExampleText\r\n","import React, { Component } from 'react';\r\nimport './content.scss';\r\nimport M from \"materialize-css\";\r\nimport Dashboard from './dashboard/Dashboard';\r\nimport Data from '../_data/DataLoader'\r\nimport Loader from './loader/Loader'\r\n\r\n\r\nclass Content extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      isLoggedIn: false\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = Data.initialiseData();\r\n    data.then(function (map) {\r\n      this.setState({\r\n        isLoggedIn: true,\r\n        dataMap: map\r\n      });\r\n    }.bind(this));\r\n\r\n    M.AutoInit();\r\n  }\r\n\r\n  render() {\r\n    var renderItem = <Loader />;\r\n    if (this.state.isLoggedIn) {\r\n      renderItem = <Dashboard dataMap={this.state.dataMap}/>;\r\n    }\r\n    return (\r\n      <main>\r\n        <div>\r\n          {renderItem}\r\n        </div>\r\n      </main >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n\r\n    return (\r\n      <footer class=\"page-footer\">\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col l6 s12\">\r\n                <h5 class=\"white-text\">What is this?</h5>\r\n                <p class=\"grey-text text-lighten-4\">This page is a Dashboard that visialises Covid-19 information provided by ecdc. It uses React, materializecss, Chart.js and Leaflet to display the visualisations in a coherent manner.</p>\r\n                <li><a class=\"grey-text text-lighten-3\" href=\"/covid_19/live\">See Latest Data go to /covid_19/live</a></li>\r\n                <li><a class=\"grey-text text-lighten-3\" href=\"/covid_19/\">See Cached Data from Apr 13 2020 go to /covid_19/</a></li>\r\n                <li><a class=\"grey-text text-lighten-3\" href=\"/covid_19/live?country=Ireland\">To See Data for a specific country you can put in ?country=Irelend</a></li>\r\n              </div>\r\n              <div class=\"col l4 offset-l2 s12\">\r\n                <h5 class=\"white-text\">Data Used:</h5>\r\n                <ul>\r\n                  <li><a class=\"grey-text text-lighten-3\" href=\"https://www.ecdc.europa.eu/\">Covid-19 - ecdc</a></li>\r\n                  <li><a class=\"grey-text text-lighten-3\" href=\"https://datahub.io/JohnSnowLabs/country-and-continent-codes-list\">Country Data - JohnSnowLabs</a></li>\r\n                  <li><a class=\"grey-text text-lighten-3\" href=\"https://developers.google.com/public-data/docs/canonical/countries_csv\">LatLng Data - Google</a></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"footer-copyright\">\r\n            <div class=\"container\">\r\n            Visualisation by Daniel Foth\r\n            <a class=\"grey-text text-lighten-4 right\" href=\"/covid_19/live\">Data: Latest</a>\r\n            <a class=\"grey-text text-lighten-4 right\" href=\"/covid_19\">Data: Apr 13 2020</a>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './_header/Header.js';\r\nimport Content from './_content/Content.js';\r\nimport Footer from './_footer/Footer.js';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <Content/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}