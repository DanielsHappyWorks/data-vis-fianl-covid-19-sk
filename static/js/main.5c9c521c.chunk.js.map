{"version":3,"sources":["_header/Header.js","charts/MapChart.js","charts/MultiChart.js","charts/MultiDateChart.js","_data/DataProcessor.js","_content/widget/InfoCard/InfoCard.js","_content/widget/InfoCardRow/InfoCardRow.js","_content/dashboard/Dashboard.js","_data/DataLoader.js","_content/loader/Loader.js","_content/Content.js","_footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["SuperCoolComponent","M","AutoInit","className","Component","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapChart","props","state","map","getAllSettings","color","1","2","3","4","elems","document","querySelectorAll","newSate","FormSelect","init","getSelectedValues","this","setState","onChange","handleClick","bind","value","defaultValue","center","zoom","zoomControl","style","width","height","TileLayer","attribution","url","detectRetina","maxZoom","maxNativeZoom","chartData","data","CircleMarker","latLong","key","country","opacity","radius","Popup","replace","totalCases","totalDeaths","recentCases","recentDeaths","MultiChart","getDataAsChartData","limit","chart","getElementById","id","labels","datasets","label","backgroundColor","Array","from","keys","x","values","list","j","length","push","sort","a","b","k","slice","options","title","display","displayTitle","text","legend","position","legendPosition","displayLegend","cutoutPercentage","getChart","defaultProps","borderWidth","scales","xAxes","yAxes","type","Data","undefined","setData","newData","Number","getTotal","toLocaleString","getLatest","getMortality","getWorldMapData","getCountersPerValue","getCountersPerValueLatest","getCumulative","sortByData","getData","updateDashboardState","newState","global","continent","cases","itemToGroupBy","itemToCount","counter","Map","forEach","element","listItem","countriesAndTerritories","get","set","parseInt","valMap","reverse","cumulativeValue","mostRecentDate","Date","year","month","day","getTime","deaths","deathsCases","worldData","totalCasesTracker","totalDeathsTracker","recentCasesTracker","recentDeathsTracker","transformedElem","latitude","longitude","totalCasesMinMax","normalizeBetweenTwoRanges","Math","min","apply","max","totalDeathsMinMax","recentCasesMinMax","recentDeathsMinMax","val","minVal","maxVal","newMin","newMax","mostRecentCase","InfoCard","columns","heading","InfoCardRow","Object","cards","Dashboard","name","URL","location","searchParams","dataMap","includes","createState","countriesForAutoComplete","fromEntries","countries","DataProcessor","elem","querySelector","Collapsible","accordion","Autocomplete","onAutocomplete","wat","addEventListener","col","two","three","one","worldMapData","htmlFor","MultiDateChart","cumulative","daily","initialiseData","shouldGetDataFromFile","getDataFromFile","fetch","then","response","json","getDataMap","catch","err","console","log","countryMap","exclusionList","records","continentCode","continentName","geo_location","geoId","Three_Letter_Country_Code","countryterritoryCode","Two_Letter_Country_Code","Continent_Name","continentExp","Continent_Code","LoaderExampleText","Content","isLoggedIn","renderItem","Loader","Footer","href","React","App","Header","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c9c521c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './header.scss';\r\n\r\n// Import Materialize\r\nimport M from \"materialize-css\";\r\n\r\n\r\nclass SuperCoolComponent extends Component {\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <div className=\"nav-wrapper\">\r\n            <div className=\"brand-logo center\">COVID-19</div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SuperCoolComponent;","import React, { Component } from 'react';\r\nimport { Map, TileLayer, CircleMarker, Popup } from \"react-leaflet\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport M from \"materialize-css\";\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nclass MapChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      map: this.getAllSettings()[1].map,\r\n      color: this.getAllSettings()[1].color,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    M.AutoInit();\r\n  }\r\n\r\n  getAllSettings() {\r\n    return {\r\n      1: {\r\n        map: \"totalCases\",\r\n        color: \"#2BB11A\",\r\n      },\r\n      2: {\r\n        map: \"totalDeaths\",\r\n        color: \"#CDAF1C\",\r\n      },\r\n      3: {\r\n        map: \"recentCases\",\r\n        color: \"#1C8ECD\",\r\n      },\r\n      4: {\r\n        map: \"recentDeaths\",\r\n        color: \"#C70039\",\r\n      }\r\n    };\r\n  }\r\n\r\n  handleClick() {\r\n    var elems = document.querySelectorAll('select');\r\n    var instances = M.FormSelect.init(elems);\r\n    var newSate = instances[0].getSelectedValues()[0];\r\n    this.setState({\r\n      map: this.getAllSettings()[newSate].map,\r\n      color: this.getAllSettings()[newSate].color\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"input-field col s12\">\r\n          <select onChange={this.handleClick.bind(this)}>\r\n            <option value=\"1\" defaultValue>Total Cases</option>\r\n            <option value=\"3\">Recent Cases</option>\r\n            <option value=\"2\">Total Deaths</option>\r\n            <option value=\"4\">Recent Deaths</option>\r\n          </select>\r\n          <label>Select Map</label>\r\n        </div>\r\n        <Map\r\n          center={[0, 0]}\r\n          zoom=\"2\"\r\n          zoomControl=\"false\"\r\n          style={{ width: '100%', height: '500px' }}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            detectRetina=\"true\"\r\n            maxZoom=\"10\"\r\n            maxNativeZoom=\"10\"\r\n          />\r\n\r\n          {this.props.chartData.map(data => {\r\n            if (data[this.state.map] !== 0) {\r\n              return (\r\n                <CircleMarker\r\n                  center={data.latLong}\r\n                  key={data.country + \"_cases\"}\r\n                  opacity={0.7}\r\n                  radius={data[this.state.map + \"MinMax\"]}\r\n                  color={this.state.color}\r\n                >\r\n                  <Popup>Location: {data.country.replace(/_/g, \" \")}<br></br>\r\n                Total Cases: {data.totalCases}<br></br>\r\n                Total Deaths: {data.totalDeaths}<br></br>\r\n                Recent Cases: {data.recentCases}<br></br>\r\n                Recent Deaths: {data.recentDeaths}\r\n                  </Popup>\r\n                </CircleMarker>\r\n              )\r\n            }\r\n            else {\r\n              return '';\r\n            } \r\n          }\r\n          )}\r\n        </Map>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapChart;","import React, { Component } from 'react';\r\nimport { Pie, Bar, Line, Polar, Doughnut } from 'react-chartjs-2';\r\nimport M from \"materialize-css\";\r\n\r\n\r\nclass MultiChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: this.getDataAsChartData(props.chartData, props.limit),\r\n      chart: \"1\"\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    displayTitle: true,\r\n    displayLegend: true,\r\n    legendPosition: 'right',\r\n    title: 'Unset Title'\r\n  }\r\n\r\n  componentDidMount() {\r\n    M.AutoInit();\r\n  }\r\n\r\n  handleClick() {\r\n    var elems = document.getElementById(this.props.id + 'select');\r\n    var instances = M.FormSelect.init(elems);\r\n    var newSate = instances.getSelectedValues()[0];\r\n    this.setState({\r\n      chart: newSate,\r\n    });\r\n  }\r\n\r\n  getDataAsChartData(data, limit) {\r\n    var chartData = {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"Value\",\r\n          data: [],\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.6)',\r\n            'rgba(54, 162, 235, 0.6)',\r\n            'rgba(255, 206, 86, 0.6)',\r\n            'rgba(75, 192, 192, 0.6)',\r\n            'rgba(153, 102, 255, 0.6)',\r\n            'rgba(255, 159, 64, 0.6)',\r\n            'rgba(255, 99, 90, 0.6)',\r\n            'rgba(100, 162, 235, 0.6)',\r\n            'rgba(255, 150, 86, 0.6)'\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n    chartData.labels = Array.from(data.keys()).map(function (x) { return x.replace(/_/g, ' '); });\r\n    chartData.datasets[0].data = Array.from(data.values());\r\n\r\n\r\n    var list = [];\r\n    for (var j = 0; j < chartData.labels.length; j++)\r\n      list.push({ 'key': chartData.labels[j], 'value': chartData.datasets[0].data[j] });\r\n\r\n    list.sort(function (a, b) {\r\n      return b.value - a.value;\r\n    });\r\n\r\n    for (var k = 0; k < list.length; k++) {\r\n      chartData.labels[k] = list[k].key;\r\n      chartData.datasets[0].data[k] = list[k].value;\r\n    }\r\n\r\n    if (limit) {\r\n      chartData.labels = chartData.labels.slice(0, limit);\r\n      chartData.datasets[0].data = chartData.datasets[0].data.slice(0, limit);\r\n    }\r\n\r\n    return chartData;\r\n  }\r\n\r\n  getChart(chart) {\r\n    if (chart === \"1\") {\r\n      return <Bar\r\n        data={this.state.chartData}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Bar Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"2\") {\r\n      return <Pie\r\n        data={this.state.chartData}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Pie Chart\",\r\n          },\r\n          legend: {\r\n            display: this.props.displayLegend,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"3\") {\r\n      return <Doughnut\r\n        data={this.state.chartData}\r\n        options={{\r\n          cutoutPercentage: 50,\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Doughnut Chart\",\r\n          },\r\n          legend: {\r\n            display: this.props.displayLegend,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"4\") {\r\n      return <Polar\r\n        data={this.state.chartData}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Polar Chart\",\r\n          },\r\n          legend: {\r\n            display: this.props.displayLegend,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"5\") {\r\n      return <Line\r\n        data={this.state.chartData}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Line Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var chart = this.getChart(this.state.chart);\r\n    return (\r\n      <div>\r\n        <div className=\"input-field col s12\">\r\n          <select id={this.props.id + 'select'} onChange={this.handleClick.bind(this)}>\r\n            <option value=\"1\" defaultValue>{this.props.title}- Bar Chart</option>\r\n            <option value=\"2\">{this.props.title} - Pie Chart</option>\r\n            <option value=\"3\">{this.props.title} - Doughnut Chart</option>\r\n            <option value=\"4\">{this.props.title} - Polar Chart</option>\r\n            <option value=\"5\">{this.props.title} - Line Chart</option>\r\n          </select>\r\n          <label>Select Chart</label>\r\n        </div>\r\n        {chart}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MultiChart;","import React, { Component } from 'react';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nimport M from \"materialize-css\";\r\n\r\n\r\nclass MultiChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: this.getDataAsChartData(props.chartData),\r\n      chart: \"1\"\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    displayTitle: true,\r\n    displayLegend: true,\r\n    legendPosition: 'right',\r\n    title: 'Unset Title'\r\n  }\r\n\r\n  componentDidMount() {\r\n    M.AutoInit();\r\n  }\r\n\r\n  handleClick() {\r\n    var elems = document.getElementById(this.props.id + 'select');\r\n    var instances = M.FormSelect.init(elems);\r\n    var newSate = instances.getSelectedValues()[0];\r\n    this.setState({\r\n      chart: newSate,\r\n    });\r\n  }\r\n\r\n  getDataAsChartData(data) {\r\n    var chartData = {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          backgroundColor: this.props.color,\r\n          borderWidth: 1,\r\n          label: \"Value\",\r\n          data: [],\r\n        }\r\n      ]\r\n    }\r\n    chartData.labels = data.keys;\r\n    chartData.datasets[0].data = data.values;\r\n\r\n    return chartData;\r\n  }\r\n\r\n  getChart(chart) {\r\n    if (chart === \"1\") {\r\n      return <Bar\r\n        data={this.state.chartData}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Bar Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"2\") {\r\n      return <Line\r\n        data={this.state.chartData}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Line Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"3\") {\r\n      return <Bar\r\n        data={this.state.chartData}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Line Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          },\r\n          scales: {\r\n            xAxes: [{\r\n              display: true,\r\n            }],\r\n            yAxes: [{\r\n              display: true,\r\n              type: 'logarithmic',\r\n            }]\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n    else if (chart === \"4\") {\r\n      return <Line\r\n        data={this.state.chartData}\r\n        options={{\r\n          title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title + \"- Line Chart\",\r\n          },\r\n          legend: {\r\n            display: false,\r\n            position: this.props.legendPosition\r\n          },\r\n          scales: {\r\n            xAxes: [{\r\n              display: true,\r\n            }],\r\n            yAxes: [{\r\n              display: true,\r\n              type: 'logarithmic',\r\n            }]\r\n          }\r\n        }}\r\n      />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var chart = this.getChart(this.state.chart);\r\n    return (\r\n      <div>\r\n        <div className=\"input-field col s12\">\r\n          <select id={this.props.id + 'select'} onChange={this.handleClick.bind(this)}>\r\n            <option value=\"1\" defaultValue>{this.props.title} - Bar Chart</option>\r\n            <option value=\"2\">{this.props.title} - Line Chart</option>\r\n            <option value=\"3\">{this.props.title} - Logrithmic Bar Chart</option>\r\n            <option value=\"4\">{this.props.title} - Logrithmic Line Chart</option>\r\n          </select>\r\n          <label>Select Chart</label>\r\n        </div>\r\n        {chart}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MultiChart;","const Data = {\r\n  data: undefined,\r\n\r\n  setData: function (newData, country) {\r\n    this.data = {\r\n      \"map\": newData,\r\n      \"global\": {\r\n        \"totalCases\": {\r\n          \"Total Cases\": Number(this.getTotal(newData, 'cases')).toLocaleString(),\r\n          \"Recent Cases\": Number(this.getLatest(newData, 'cases')).toLocaleString()\r\n        },\r\n        \"totalDeaths\": {\r\n          \"Total Deaths\": Number(this.getTotal(newData, 'deaths')).toLocaleString(),\r\n          \"Recent Deaths\": Number(this.getLatest(newData, 'deaths')).toLocaleString(),\r\n          \"Mortality Rate\": Number(this.getMortality(newData)).toLocaleString() + \"%\"\r\n        },\r\n        \"worldMapData\": this.getWorldMapData(newData),\r\n        \"continent\": {\r\n          \"cases\": this.getCountersPerValue(newData, 'continentName', 'cases'),\r\n          \"deaths\": this.getCountersPerValue(newData, 'continentName', 'deaths'),\r\n          \"recentCases\": this.getCountersPerValueLatest(newData, 'continentName', 'cases'),\r\n          \"recentDeaths\": this.getCountersPerValueLatest(newData, 'continentName', 'deaths')\r\n        },\r\n        \"country\": {\r\n          \"cases\": this.getCountersPerValue(newData, 'countriesAndTerritories', 'cases'),\r\n          \"deaths\": this.getCountersPerValue(newData, 'countriesAndTerritories', 'deaths'),\r\n          \"recentCases\": this.getCountersPerValueLatest(newData, 'countriesAndTerritories', 'cases'),\r\n          \"recentDeaths\": this.getCountersPerValueLatest(newData, 'countriesAndTerritories', 'deaths')\r\n        }\r\n      },\r\n      \"country\": {\r\n        \"totalCases\": {\r\n          \"Total Cases\": Number(this.getTotal(newData, 'cases', country)).toLocaleString(),\r\n          \"Recent Cases\": Number(this.getLatest(newData, 'cases', country)).toLocaleString()\r\n        },\r\n        \"totalDeaths\": {\r\n          \"Total Deaths\": Number(this.getTotal(newData, 'deaths', country)).toLocaleString(),\r\n          \"Recent Deaths\": Number(this.getLatest(newData, 'deaths', country)).toLocaleString(),\r\n          \"Mortality Rate\": Number(this.getMortality(newData, country)).toLocaleString() + \"%\"\r\n        },\r\n        \"cumulative\": {\r\n          \"cases\": this.getCumulative(this.sortByData(this.getCountersPerValue(newData, 'dateRep', 'cases', country))),\r\n          \"deaths\": this.getCumulative(this.sortByData(this.getCountersPerValue(newData, 'dateRep', 'deaths', country))),\r\n        },\r\n        \"daily\": {\r\n          \"cases\": this.sortByData(this.getCountersPerValue(newData, 'dateRep', 'cases', country)),\r\n          \"deaths\": this.sortByData(this.getCountersPerValue(newData, 'dateRep', 'deaths', country)),\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  getData: function () {\r\n    return this.data;\r\n  },\r\n\r\n  updateDashboardState: function (newState) {\r\n    newState.chartData.labels = Array.from(this.data.global.continent.cases.keys());\r\n    newState.chartData.datasets[0].data = Array.from(this.data.global.continent.cases.values());;\r\n    return newState;\r\n  },\r\n\r\n  getCountersPerValue: function (data, itemToGroupBy, itemToCount, country) {\r\n    var counter = new Map()\r\n    data.forEach(element => {\r\n      element.forEach(listItem => {\r\n        if ((country === undefined || country === listItem.countriesAndTerritories)) {\r\n          if (counter.get(listItem[itemToGroupBy]) !== undefined) {\r\n            counter.set(listItem[itemToGroupBy], counter.get(listItem[itemToGroupBy]) + parseInt(listItem[itemToCount]));\r\n          } else {\r\n            counter.set(listItem[itemToGroupBy], parseInt(listItem[itemToCount]));\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return counter;\r\n  },\r\n\r\n  sortByData: function (valMap) {\r\n    var keys = Array.from(valMap.keys()).reverse();\r\n    var values = Array.from(valMap.values()).reverse();\r\n\r\n    return {\r\n      keys: keys,\r\n      values: values,\r\n    };\r\n  },\r\n\r\n  getCumulative: function (valMap) {\r\n    var cumulativeValue = 0;\r\n    valMap.values.forEach((value, key) => {\r\n      cumulativeValue = cumulativeValue + value;\r\n      valMap.values[key] = cumulativeValue;\r\n    });\r\n    return {\r\n      keys: valMap.keys,\r\n      values: valMap.values,\r\n    };\r\n  },\r\n\r\n  getCountersPerValueLatest: function (data, itemToCount, value) {\r\n    var counter = new Map()\r\n    var mostRecentDate = new Date(1999, 1, 1);\r\n    data.forEach(element => {\r\n      element.forEach(listItem => {\r\n        if (mostRecentDate < new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day))) {\r\n          mostRecentDate = new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day));\r\n          counter.set(listItem[itemToCount], parseInt(listItem[value]));\r\n        } else if (mostRecentDate.getTime() === new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day)).getTime()) {\r\n          if (counter.get(listItem[itemToCount]) !== undefined) {\r\n            counter.set(listItem[itemToCount], counter.get(listItem[itemToCount]) + parseInt(listItem[value]));\r\n          } else {\r\n            counter.set(listItem[itemToCount], parseInt(listItem[value]));\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return counter;\r\n  },\r\n\r\n  getWorldMapData: function (data) {\r\n    var cases = this.getCountersPerValue(data, 'countriesAndTerritories', 'cases');\r\n    var deaths = this.getCountersPerValue(data, 'countriesAndTerritories', 'deaths');\r\n    var recentCases = this.getCountersPerValueLatest(data, 'countriesAndTerritories', 'cases');\r\n    var deathsCases = this.getCountersPerValueLatest(data, 'countriesAndTerritories', 'deaths');\r\n    var worldData = []\r\n    var totalCasesTracker = [];\r\n    var totalDeathsTracker = [];\r\n    var recentCasesTracker = [];\r\n    var recentDeathsTracker = [];\r\n    data.forEach(element => {\r\n      var transformedElem = {};\r\n      transformedElem.country = element[0].countriesAndTerritories;\r\n      transformedElem.latLong = [element[0].latitude, element[0].longitude];\r\n      transformedElem.totalCases = cases.get(element[0].countriesAndTerritories)\r\n      totalCasesTracker.push(transformedElem.totalCases);\r\n      transformedElem.totalDeaths = deaths.get(element[0].countriesAndTerritories)\r\n      totalDeathsTracker.push(transformedElem.totalDeaths);\r\n      transformedElem.recentCases = recentCases.get(element[0].countriesAndTerritories)\r\n      recentCasesTracker.push(transformedElem.recentCases);\r\n      transformedElem.recentDeaths = deathsCases.get(element[0].countriesAndTerritories)\r\n      recentDeathsTracker.push(transformedElem.recentDeaths);\r\n      worldData.push(transformedElem)\r\n    });\r\n    worldData.forEach(element => {\r\n      element.totalCasesMinMax = this.normalizeBetweenTwoRanges(element.totalCases, Math.min.apply(null, totalCasesTracker), Math.max.apply(null, totalCasesTracker), 5, 100);\r\n      element.totalDeathsMinMax = this.normalizeBetweenTwoRanges(element.totalDeaths, Math.min.apply(null, totalDeathsTracker), Math.max.apply(null, totalDeathsTracker), 5, 100);\r\n      element.recentCasesMinMax = this.normalizeBetweenTwoRanges(element.recentCases, Math.min.apply(null, recentCasesTracker), Math.max.apply(null, recentCasesTracker), 5, 100);\r\n      element.recentDeathsMinMax = this.normalizeBetweenTwoRanges(element.recentDeaths, Math.min.apply(null, recentDeathsTracker), Math.max.apply(null, recentDeathsTracker), 5, 100);\r\n    })\r\n    return worldData;\r\n  },\r\n\r\n  normalizeBetweenTwoRanges: function (val, minVal, maxVal, newMin, newMax) {\r\n    return newMin + (val - minVal) * (newMax - newMin) / (maxVal - minVal);\r\n  },\r\n\r\n  getMortality: function (data, country) {\r\n    var totalCases = this.getTotal(data, 'cases', country);\r\n    var totalDeaths = this.getTotal(data, 'deaths', country);\r\n    return totalDeaths / totalCases * 100;\r\n  },\r\n\r\n  getTotal: function (data, value, country) {\r\n    var counter = 0\r\n    data.forEach(element => {\r\n      element.forEach(listItem => {\r\n        if (country === undefined || country === listItem.countriesAndTerritories) {\r\n          counter += parseInt(listItem[value])\r\n        }\r\n      });\r\n    });\r\n    return counter;\r\n  },\r\n\r\n  getLatest: function (data, value, country) {\r\n    var counter = 0\r\n    data.forEach(element => {\r\n      var mostRecentDate = new Date(1999, 1, 1);\r\n      var mostRecentCase = 0\r\n      element.forEach(listItem => {\r\n        if ((mostRecentDate < new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day))) && (country === undefined || country === listItem.countriesAndTerritories)) {\r\n          mostRecentDate = new Date(parseInt(listItem.year), parseInt(listItem.month - 1), parseInt(listItem.day));\r\n          mostRecentCase = parseInt(listItem[value]);\r\n        }\r\n      });\r\n      counter += mostRecentCase;\r\n    });\r\n    return counter;\r\n  },\r\n}\r\n\r\nexport default Data;","import React, { Component } from 'react';\r\nimport M from \"materialize-css\";\r\nimport './InfoCard.scss';\r\n\r\n\r\nclass InfoCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // Auto initialize all the things!\r\n        M.AutoInit();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.columns}>\r\n                <div className=\"card InfoCard\">\r\n                    <h5 className=\"header\">{this.props.heading}</h5>\r\n                    <p>{this.props.data}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoCard;","import React, { Component } from 'react';\r\nimport M from \"materialize-css\";\r\nimport InfoCard from '../InfoCard/InfoCard';\r\n\r\n\r\nclass InfoCardRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Auto initialize all the things!\r\n        M.AutoInit();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {Object.keys(this.props.cards).map(key => (\r\n                    <InfoCard key={key} columns={this.props.columns} heading={key} data={this.props.cards[key]} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoCardRow;","import React, { Component } from 'react';\r\nimport M from \"materialize-css\";\r\nimport MapChart from '../../charts/MapChart';\r\nimport MultiChart from '../../charts/MultiChart';\r\nimport MultiDateChart from '../../charts/MultiDateChart';\r\nimport DataProcessor from '../../_data/DataProcessor'\r\nimport InfoCardRow from '../widget/InfoCardRow/InfoCardRow'\r\n\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var params = (new URL(document.location)).searchParams;\r\n    var name = params.get(\"country\");\r\n    var country = Array.from(this.props.dataMap.keys()).includes(name) ? name : \"South_Korea\";\r\n\r\n    this.state = this.createState(country);\r\n  }\r\n\r\n  createState(country) {\r\n    var countriesForAutoComplete = Object.fromEntries(this.props.dataMap);\r\n    Object.keys(countriesForAutoComplete).forEach(k => countriesForAutoComplete[k] = null)\r\n\r\n    var newState = {\r\n      countries: Array.from(this.props.dataMap.keys()),\r\n      countriesForAutoComplete: countriesForAutoComplete,\r\n    }\r\n\r\n    newState[\"country\"] = country;\r\n\r\n    DataProcessor.setData(this.props.dataMap, country);\r\n    newState[\"data\"] = DataProcessor.getData();\r\n    newState[\"col\"] = {\r\n      \"two\": \"col s12 m12 l6\",\r\n      \"three\": \"col s12 m6 l4\",\r\n      \"four\": \"col s12 m6 l3\",\r\n      \"five\": \"col s12 m6 l2\"\r\n    }\r\n    return newState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n\r\n    var elem = document.querySelector('.collapsible.expandable');\r\n    M.Collapsible.init(elem, {\r\n      accordion: false\r\n    });\r\n\r\n    var elems = document.querySelectorAll('.autocomplete');\r\n    M.Autocomplete.init(elems, {\r\n      data: this.state.countriesForAutoComplete,\r\n      onAutocomplete: function (wat) {\r\n        DataProcessor.setData(this.props.dataMap, wat);\r\n        this.setState(this.createState(wat));\r\n      }.bind(this)\r\n    });\r\n  }\r\n\r\n  initMaterialise() {\r\n    M.AutoInit();\r\n\r\n    var elem = document.querySelector('.collapsible.expandable');\r\n    M.Collapsible.init(elem, {\r\n      accordion: false\r\n    });\r\n\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      var elems = document.querySelectorAll('.autocomplete');\r\n      M.Autocomplete.init(elems, {\r\n        data: this.state.countriesForAutoComplete,\r\n        onAutocomplete: function (wat) {\r\n          DataProcessor.setData(this.props.dataMap, wat);\r\n          this.setState(this.createState(wat));\r\n        }.bind(this)\r\n      });\r\n    }.bind(this));\r\n  }\r\n\r\n  render() {\r\n    this.cards = {\r\n      \"Total Cases\": 468451,\r\n      \"Current Cases\": 4845,\r\n      \"Recoveries\": 845,\r\n      \"Deaths\": 48565\r\n    }\r\n    return (\r\n      <main>\r\n        <div className=\"container\">\r\n\r\n          <h3 className=\"header\">Global Data</h3>\r\n          <blockquote>\r\n            Shows the global data for Covid-19\r\n          </blockquote>\r\n          <div className=\"row\">\r\n            <InfoCardRow columns={this.state.col.two} cards={this.state.data.global.totalCases} />\r\n            <InfoCardRow columns={this.state.col.three} cards={this.state.data.global.totalDeaths} />\r\n            <div className={this.state.col.one}>\r\n              <ul className=\"collapsible expandable\">\r\n                <li className=\"active\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">filter_drama</i>World Map</div>\r\n                  <div className=\"collapsible-body\"><MapChart chartData={this.state.data.global.worldMapData} /></div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className={this.state.col.two}>\r\n              <ul className=\"collapsible\">\r\n                <li className=\"active\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Total Cases Per Continent</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_cases_chart_map\" chartData={this.state.data.global.continent.cases} title=\"Total Cases Per Continent\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Total Deaths Per Continent</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_deaths_chart_map\" chartData={this.state.data.global.continent.deaths} title=\"Total Deaths Per Continent\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Recent Cases Per Continent</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_cases_chart_map\" chartData={this.state.data.global.continent.recentCases} title=\"Recent Cases Per Continent\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Recent Deaths Per Continent</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_deaths_chart_map\" chartData={this.state.data.global.continent.recentDeaths} title=\"Recent Deaths Per Continent\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className={this.state.col.two}>\r\n              <ul className=\"collapsible\">\r\n                <li className=\"active\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>10 Countries With Highest Total Cases</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_deaths_chart_map_country\" chartData={this.state.data.global.country.cases} limit={10} title=\"10 Countries With Highest Total Cases\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>10 Countries With Highest Total Deaths</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_cases_chart_map_country\" chartData={this.state.data.global.country.deaths} limit={10} title=\"10 Countries With Highest Total Deaths\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>10 Countries With Highest Recent Cases</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_deaths_chart_map_country\" chartData={this.state.data.global.country.recentCases} limit={10} title=\"10 Countries With Highest Recent Cases\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n                <li className=\"\">\r\n                  <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>10 Countries With Highest Recent Deaths</div>\r\n                  <div className=\"collapsible-body\"><MultiChart id=\"world_recent_deaths_chart_map_country\" chartData={this.state.data.global.country.recentDeaths} limit={10} title=\"10 Countries With Highest Recent Deaths\" legendPosition=\"bottom\" /></div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <h3 className=\"header\">Country Data: {this.state.country.replace(/_/g, \" \")}</h3>\r\n          <blockquote>\r\n            Shows the data for {this.state.country.replace(/_/g, \" \")} on Covid-19\r\n          </blockquote>\r\n          <div className=\"row\">\r\n            <div className=\"col s12\">\r\n              <div className=\"row\">\r\n                <div className=\"input-field col s12\">\r\n                  <i className=\"material-icons prefix\">textsms</i>\r\n                  <input type=\"text\" id=\"autocomplete-input\" className=\"autocomplete\" />\r\n                  <label htmlFor=\"autocomplete-input\">Autocomplete</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <InfoCardRow columns={this.state.col.two} cards={this.state.data.country.totalCases} />\r\n            <InfoCardRow columns={this.state.col.three} cards={this.state.data.country.totalDeaths} />\r\n          </div >\r\n          <div className={this.state.col.one}>\r\n            <ul className=\"collapsible\">\r\n              <li className=\"active\">\r\n                <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Cumulative Cases over time for {this.state.country.replace(/_/g, \" \")}</div>\r\n                <div className=\"collapsible-body\"><MultiDateChart id=\"country_cumulative_cases\" color='rgba(43,177,26, 0.6)' chartData={this.state.data.country.cumulative.cases} title=\"Cumulative Cases\" legendPosition=\"bottom\" /></div>\r\n              </li>\r\n              <li className=\"\">\r\n                <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Cumulative Deaths over time for {this.state.country.replace(/_/g, \" \")}</div>\r\n                <div className=\"collapsible-body\"><MultiDateChart id=\"country_cumulative_deaths\" color='rgba(205,175,28, 0.6)' chartData={this.state.data.country.cumulative.deaths} title=\"Cumulative Deaths\" legendPosition=\"bottom\" /></div>\r\n              </li>\r\n              <li className=\"\">\r\n                <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Daily Cases for {this.state.country.replace(/_/g, \" \")}</div>\r\n                <div className=\"collapsible-body\"><MultiDateChart id=\"country_daily_cases\" color='rgba(28,142,205, 0.6)' chartData={this.state.data.country.daily.cases} title=\"Daily Cases\" legendPosition=\"bottom\" /></div>\r\n              </li>\r\n              <li className=\"\">\r\n                <div className=\"collapsible-header\"><i className=\"material-icons\">arrow_drop_down</i>Daily Deaths for {this.state.country.replace(/_/g, \" \")}</div>\r\n                <div className=\"collapsible-body\"><MultiDateChart id=\"country_daily_deaths\" color='rgba(199,0,57, 0.6)' chartData={this.state.data.country.daily.cases} title=\"Daily Deaths\" legendPosition=\"bottom\" /></div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </main >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import data from './data.json'; //https://www.ecdc.europa.eu/\r\nimport countries from './countries.json'; //https://datahub.io/JohnSnowLabs/country-and-continent-codes-list\r\nimport geo_location from './long_lat.json';//https://developers.google.com/public-data/docs/canonical/countries_csv\r\n\r\nconst Data = {\r\n\r\n  initialiseData: async function () {\r\n    if (this.shouldGetDataFromFile()) {\r\n      return this.getDataFromFile();\r\n    } else {\r\n      //bypass cors issue https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe\r\n      let response = await fetch(\"https://cors-anywhere.herokuapp.com/https://opendata.ecdc.europa.eu/covid19/casedistribution/json/\")\r\n        .then(function (response) {\r\n          return response.json();\r\n        })\r\n        .then(function (json) {\r\n          return this.getDataMap(json);\r\n        }.bind(this))\r\n        .catch(function (err) {\r\n          console.log(\"Can’t access response. (Getting Data from File) Blocked by browser?\" + err)\r\n          return this.getDataFromFile();\r\n        }.bind(this))\r\n      return response;\r\n    }\r\n  },\r\n\r\n  getDataMap: function (response) {\r\n    var countryMap = new Map();\r\n    var exclusionList = [];\r\n    response.records.forEach(element => {\r\n      var continentCode = undefined;\r\n      var continentName = undefined;\r\n\r\n      var latitude = undefined;\r\n      var longitude = undefined;\r\n\r\n      geo_location.forEach(location => {\r\n        if ((location.country === element.geoId || location.name === element.countriesAndTerritories.replace(/_/g, \" \"))) {\r\n          latitude = location.latitude;\r\n          longitude = location.longitude;\r\n        }\r\n      })\r\n\r\n      countries.forEach(country => {\r\n        if (country.Three_Letter_Country_Code === element.countryterritoryCode || country.Two_Letter_Country_Code === element.geoId || country.Continent_Name === element.continentExp) {\r\n          continentCode = country.Continent_Code;\r\n          continentName = country.Continent_Name;\r\n        }\r\n      })\r\n\r\n      element[\"continentCode\"] = continentCode;\r\n      element[\"continentName\"] = continentName;\r\n\r\n      element[\"latitude\"] = latitude;\r\n      element[\"longitude\"] = longitude;\r\n\r\n      if(element[\"latitude\"] && element[\"longitude\"] && element[\"continentCode\"] && element[\"continentName\"]) {\r\n        if (countryMap.get(element.countriesAndTerritories) !== undefined) {\r\n          countryMap.get(element.countriesAndTerritories).push(element);\r\n        } else {\r\n          countryMap.set(element.countriesAndTerritories, [element]);\r\n        }\r\n      } else {\r\n        exclusionList.push(element);\r\n      }\r\n    });\r\n\r\n    console.log(\"Failed to add following to data:\", exclusionList);\r\n    return countryMap;\r\n  },\r\n\r\n  shouldGetDataFromFile: function () {\r\n    var params = (new URL(document.location)).searchParams;\r\n    if(params.get(\"live\") === \"true\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  getDataFromFile: function () {\r\n    return this.getDataMap(data);\r\n  }\r\n}\r\n\r\nexport default Data;","import React from 'react'\r\nimport './loader.scss';\r\n\r\nconst LoaderExampleText = () => (\r\n  <div>\r\n    <center>\r\n      <div className=\"loader\"></div>\r\n    </center>\r\n  </div>\r\n)\r\n\r\nexport default LoaderExampleText\r\n","import React, { Component } from 'react';\r\nimport './content.scss';\r\nimport M from \"materialize-css\";\r\nimport Dashboard from './dashboard/Dashboard';\r\nimport Data from '../_data/DataLoader'\r\nimport Loader from './loader/Loader'\r\n\r\n\r\nclass Content extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      isLoggedIn: false\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    var data = Data.initialiseData();\r\n    data.then(function (map) {\r\n      this.setState({\r\n        isLoggedIn: true,\r\n        dataMap: map\r\n      });\r\n    }.bind(this));\r\n\r\n    M.AutoInit();\r\n  }\r\n\r\n  render() {\r\n    var renderItem = <Loader />;\r\n    if (this.state.isLoggedIn) {\r\n      renderItem = <Dashboard dataMap={this.state.dataMap}/>;\r\n    }\r\n    return (\r\n      <main>\r\n        <div>\r\n          {renderItem}\r\n        </div>\r\n      </main >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n\r\n    return (\r\n      <footer className=\"page-footer\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col l6 s12\">\r\n                <h5 className=\"white-text\">What is this?</h5>\r\n                <p className=\"grey-text text-lighten-4\">This page is a Dashboard that visialises Covid-19 information provided by ecdc. It uses React, materializecss, Chart.js and Leaflet to display the visualisations in a coherent manner.</p>\r\n                <li><a className=\"grey-text text-lighten-3\" href=\"/data-vis-fianl-covid-19-sk/?live=true\">See Latest Data go to /data-vis-fianl-covid-19-sk?live=true</a></li>\r\n                <li><a className=\"grey-text text-lighten-3\" href=\"/data-vis-fianl-covid-19-sk/\">See Cached Data from Apr 13 2020 go to /data-vis-fianl-covid-19-sk/</a></li>\r\n                <li><a className=\"grey-text text-lighten-3\" href=\"/data-vis-fianl-covid-19-sk/?live=true&country=Ireland\">To See Data for a specific country you can put in ?country=Irelend</a></li>\r\n              </div>\r\n              <div className=\"col l4 offset-l2 s12\">\r\n                <h5 className=\"white-text\">Data Used:</h5>\r\n                <ul>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://www.ecdc.europa.eu/\">Covid-19 - ecdc</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://datahub.io/JohnSnowLabs/country-and-continent-codes-list\">Country Data - JohnSnowLabs</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://developers.google.com/public-data/docs/canonical/countries_csv\">LatLng Data - Google</a></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer-copyright\">\r\n            <div className=\"container\">\r\n            Visualisation by Daniel Foth\r\n            <a className=\"grey-text text-lighten-4 right\" href=\"/data-vis-fianl-covid-19-sk/?live=true\">Data: Latest</a>\r\n            <a className=\"grey-text text-lighten-4 right\" href=\"/data-vis-fianl-covid-19-sk/\">Data: Apr 13 2020</a>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './_header/Header.js';\r\nimport Content from './_content/Content.js';\r\nimport Footer from './_footer/Footer.js';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <Content/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}